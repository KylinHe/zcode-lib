// Code generated by protoc-gen-go.
// source: activity.proto
// DO NOT EDIT!

/*
Package protocol is a generated protocol buffer package.

It is generated from these files:
	activity.proto
	arena.proto
	base.proto
	battle.proto
	boss.proto
	chat.proto
	friend.proto
	game.proto
	mail.proto
	mine.proto
	miniGame.proto
	msgType.proto
	server.proto

It has these top-level messages:
	Activity_Info_
	Activity_Reward_Info_
	Resp_Data_Activity_Update_
	Req_Data_Activity_
	Resp_Data_Activity_
	Req_Activity_Reward_Rec_
	Resp_Activity_Reward_Rec_
	GrowthCapital_
	Resp_PlayerData_Activity_
	Resp_PlayerUpdate_Activity_
	Req_Gift_
	Resp_Gift_
	Score_Reward_
	Resp_Continue_Charge_
	Resp_New_Continue_Charge_
	Req_Continue_Charge_Rec_
	Resp_Continue_Charge_Rec_
	LimitDraw_Shop_
	Resp_Limit_Draw_
	Req_Draw_
	Resp_Draw_
	Req_PrizeWheel_
	Resp_PrizeWheel_
	Req_Rec_Draw_
	Resp_Rec_Draw_
	Resp_GrowthCapital_
	GrowthCapital_Info_
	Resp_Exchange_Item_Data_
	Exchange_Item_Data_
	Resp_Update_Player_Privileges_
	Arena_Rank_Info_
	Arena_Monster_Info_
	Arena_Player_Info
	Req_Arena_Rank_
	Resp_Arena_Rank_
	Req_Arena_OpenTime_
	Resp_Arena_OpenTime_
	Req_Arena_Info_
	Resp_Arena_Info_
	Req_Honor_Shop_
	Resp_Honor_Shop_
	Req_Honor_Buy_
	Resp_Honor_Buy_
	Arena_Reward_
	Req_Arena_Match_
	Resp_Arena_Match_
	Req_Arena_Start_
	Resp_Arena_Start_
	Req_Arena_GenMonster_
	Fw_Arena_GenMonster_
	Req_Arena_Round_
	Resp_Arena_Round_
	Req_Arena_Round_End_
	Resp_Arena_Round_End_
	Req_Arena_Exit_
	Resp_Arena_End_
	Resp_PlayerUpdate_Arena_
	Req_Arena_Reconn_
	Resp_Arena_Reconn_
	Req_Arena_Reconn_Start_
	Req_Recv_Arena_Box_
	Resp_Recv_Arena_Box_
	Attr_Info_
	Equip_Info_
	TableGridInfo_
	TableBrokenInfo_
	TableSpecialInfo_
	TableInfo_
	Reward_Info_
	BattleHeroInfo_
	BattleNodeInfo_
	Chapter_Battle_Info_
	Chapter_Info_
	Chest_Info_
	Chest_Reward_Info_
	Reel_Info_
	Role_Info_
	Rank_PlayerInfo_
	PanelTag_
	Player_Info_
	ChargeReward_Info_
	NodeBatchInfo_
	NodeInfo_
	ChapterInfo_
	Req_ChapterInfo_
	Resp_ChapterInfo_
	Push_Table_Update_
	Req_ChapterNode_PickUp_
	Resp_ChapterNode_PickUp_
	Req_ChapterBattleSet_
	Resp_ChapterBattleSet_
	Req_ChapterBattleReset_
	Resp_ChapterBattleReset_
	Req_ChapterNodeState_
	Resp_ChapterNodeState_
	Req_ChapterState_
	Resp_ChapterState_
	Req_ChapterMopUp_
	Resp_ChapterMopUp_
	Req_Adventure_Choose_
	Resp_Adventure_Choose_
	Req_MysticStore_
	Resp_MysticStore_
	Req_Buy_MysticStore_
	Resp_Buy_MysticStore_
	Req_Leave_MysticStore_
	Req_Altar_
	Resp_Altar_
	Req_Buy_Altar_
	Resp_Buy_Altar_
	Boss_Info_
	PlayerBoss_Info_
	Req_Boss_Info_
	Resp_Boss_Info_
	Req_Hit_Boss_
	Resp_Hit_Boss_
	Req_Get_BossRank_
	Resp_Get_BossRank_
	Req_Add_HitTimes_
	Resp_Add_HitTimes_
	Req_Boss_RewardInfo_
	Resp_Boss_RewardInfo_
	Rank_RewardInfo_
	Resp_BossInfo_Update_
	Resp_Boss_PlayerInfo_
	Req_Boss_Battle_Begin_
	Resp_Notice_Boss_Battle_TimeOut_
	Damage_Info_
	Chat_Info_
	Marquee_Info_
	GamePush_Info_
	Resp_Marquee_
	Req_Chat_Info_
	Req_Chat_Send_
	Resp_Update_Player_ChatInfo_
	Resp_Chat_Info_
	Resp_Chat_Send_
	Resp_Chat_PriSend_
	Req_Battle_Chat_Send_
	Resp_Battle_Chat_Info_
	Friend_Info_
	Req_Friend_Info_
	Resp_Friend_Info_
	Req_Friend_Apply_
	Resp_Friend_Apply_
	Req_Friend_ApplyRet_
	Resp_Friend_ApplyRet_
	Req_Friend_Find_
	Resp_Friend_Find_
	Resp_PlayerUpdate_Friend_
	Req_Friend_Del_
	Resp_Friend_Del_
	Req_Friend_GiftSend_
	Resp_Friend_GiftSend_
	Req_Friend_Recomm_
	Resp_Friend_Recomm_
	Req_Friend_GiftRecv_
	Resp_Friend_GiftRecv_
	Req_Chest_Help_
	Resp_Chest_Help_
	Req_Share_
	Resp_Share_
	Req_Click_Share_
	Resp_Click_Share_
	Req_Watch_Adv_
	Resp_Watch_Adv_
	Req_Share_GameInfo_
	Resp_Share_GameInfo_
	Req_Get_Channel_Friends_
	Resp_Get_Channel_Friends_
	Req_Set_Channel_Friends_
	Req_Friend_Invite_Info_
	Resp_Friend_Invite_Info_
	Req_Recv_Invite_
	Resp_Recv_Invite_
	Req_Client_Dot_
	Req_Get_Server_Time_
	Resp_Get_Server_Time_
	TimeDiamond_Info_
	Formation_Info_
	Hero_Info_
	Hero_Talent_Info_
	Req_KillOff_
	Resp_KillOff_
	Chapter_CurInfo_
	Chapter_StateInfo_
	Achievement_Info_
	Task_Info_
	DailyTask_Score_Info_
	Talent_Info_
	Vip_Info_
	Req_Sys_Friend_Apply_
	Resp_PlayerUpdate_Base_
	Resp_PlayerUpdate_Hero_
	Resp_PlayerUpdate_Item_
	Resp_PlayerUpdate_Equip_
	Resp_PlayerUpdate_Reel_
	Resp_PlayerUpdate_Mail_
	Resp_PlayerUpdate_Achieve_
	Resp_PlayerUpdate_ChestFree_
	Resp_PlayerUpdate_Vip_
	Resp_Player_LvUp_
	Req_Update_Flag_
	Req_Account_Binding_
	Resp_Account_Binding_
	Req_Get_Url_
	Resp_Get_Url_
	Req_Client_Login_
	Resp_Client_Login_
	Req_Reset_IconUrl_
	Req_Set_Name_
	Resp_Set_Name_
	Req_Set_Country_
	Resp_Set_Country_
	Req_Update_PanelTag_
	Resp_PlayerData_Flag_
	Resp_PlayerData_Base_
	Resp_PlayerData_Hero_
	Resp_PlayerData_Battle_
	Resp_PlayerData_Achievement_
	Resp_PlayerData_Equip_
	Resp_PlayerData_Item_
	Req_Click_Equip_
	Req_Equip_Lock_
	Req_Equip_Sort_
	Req_Equip_LvAttr_
	Resp_Equip_LvAttr_
	Req_Sign_Info_
	Resp_Sign_Info_
	Req_Sign_
	Resp_Sign_
	Req_Chest_Op_
	Resp_Chest_Op_
	Req_Chest_Buy_
	Resp_Chest_Buy_
	Req_Chest_Free_
	Resp_Chest_Free_
	Resp_Chest_Upgrade_
	Req_ChestData_
	Resp_ChestData_
	Req_Hero_Formation_Change_
	Req_Hero_Formation_
	Resp_Hero_Formation_
	Req_Hero_Create_
	Resp_Hero_Create_
	Req_Hero_LvUp_
	Resp_Hero_LvUp_
	Req_Hero_Skill_LvUp_
	Resp_Hero_Skill_LvUp_
	Req_Frag_Refine_
	Resp_Frag_Refine_
	Req_Refine_Rule_
	Resp_Refine_Rule_
	Req_Hero_Talent_Upgrade_
	Resp_Hero_Talent_Upgrade_
	Req_Hero_Talent_Awaken_
	Req_HeroQuality_Update_
	Hero_Compose_
	Req_Hero_Talent_Reset_
	Req_Reel_Formation_
	Resp_Reel_Formation_
	Req_Get_DailyTask_
	Resp_Get_DailyTask_
	Req_Task_Receive_
	Resp_Task_Receive_
	Req_Task_ScoreReward_Receive_
	Resp_Task_ScoreReward_Receive_
	Resp_DailyTask_Update_
	Req_Cli_Reward_Receive_
	Resp_Cli_Reward_Receive_
	Req_Achievement_Data_
	Resp_Achievement_Data_
	Req_Achievement_Receive_
	Resp_Achievement_Receive_
	Req_Set_Achieve_
	Req_Equip_LvUp_
	Resp_Equip_LvUp_
	Req_Equip_Wear_
	Resp_Equip_Wear_
	Req_Equip_Del_
	Resp_Equip_Del_
	Req_Equip_UnWear_
	Resp_Equip_UnWear_
	Req_Equip_Sell_
	Resp_Equip_Sell_
	Req_Equip_Evolution_
	Resp_Equip_Evolution_
	Req_Talent_Info_
	Resp_Talent_Info_
	Req_Talent_LvUp_
	Resp_Talent_LvUp_
	Req_Change_Career_
	Resp_Change_Career_
	Req_Talent_Reset_
	Resp_Talent_Reset_
	Req_Shop_Info_
	Resp_Shop_Info_
	Resp_Update_Player_DrawInfo_
	Req_Shop_Buy_
	Resp_Shop_Buy_
	Req_ScoreShop_Update_
	Resp_ScoreShop_Update_
	Req_ScoreShop_Buy_
	Resp_ScoreShop_Buy_
	Req_EquipScoreShop_Update_
	Resp_EquipScoreShop_Update_
	Req_EquipScoreShop_Buy_
	Resp_EquipScoreShop_Buy_
	Req_PayShop_Show_
	Req_Exchange_Item_
	Resp_Exchange_Item_
	Req_UserRank_
	Resp_UserRank_
	Req_Vip_Info_
	Resp_Vip_Info_
	Req_Vip_Receive_
	Resp_Vip_Receive_
	Req_PlayerInfos_
	Resp_PlayerInfos_
	Req_PayOrder_
	Resp_PayOrder_
	Req_PayOrder_Check_
	Resp_PayOrder_Check_
	Req_Receive_ChargeReward_
	Resp_Receive_ChargeReward_
	Req_ChargeRewardInfo_
	Resp_ChargeRewardInfo_
	Req_Data_Push_
	Resp_Data_Push_
	Req_Invite_
	Resp_Invite_
	Req_Rec_FamilyExp_
	Resp_Rec_FamilyExp_
	Push_Issue_Code_
	Req_HeartBeat_
	Resp_HeartBeat_
	Req_Client_Feedback_
	Mail_Info_
	Req_Mail_List_
	Resp_Mail_List_
	Req_Mail_Read_
	Resp_Mail_Read_
	Req_Mail_Receive_
	Resp_Mail_Receive_
	Req_Mail_Delete_
	Push_Mail_
	Req_Send_Mail_
	Mine_Player_Info_
	Req_Get_MineInfo_
	Resp_Get_MineInfo_
	Req_Mine_Upgrade_
	Resp_Mine_Upgrade_
	Req_Save_MineHeroes_
	Resp_Save_MineHeroes_
	Req_Refresh_MineEnemy_
	Resp_Refresh_MineEnemy_
	Req_Mine_Collect_
	Resp_Mine_Collect_
	Req_Battle_Result_
	Resp_Battle_Result_
	Resp_Plunder_Mine_
	Req_MineInfo_Op_
	Resp_MineInfo_Op_
	Resp_Mine_Info_
	Req_MiniGame_Info_
	Resp_MiniGame_Info_
	Req_MiniGame_Enter_
	Resp_MiniGame_Enter_
	Game_Info_
	Req_MiniGame_Result_
	Resp_MiniGame_Result_
	Resp_MiniGame_Update_
	C2GS
	GS2C
	Req_Create_User_
	Resp_Create_User_
	Req_Mail_Update_
	Resp_Mail_Update_
	Resp_NewMail_Push_
	Resp_Test_Func_
	Resp_LazyPass_
	Req_Notice_User_Online_
	Resp_Notice_User_Online_
*/
package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 活动数据
type Activity_Info_ struct {
	ID               *int32                   `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	OpenTime         *int64                   `protobuf:"varint,2,opt,name=OpenTime" json:"OpenTime,omitempty"`
	EndTime          *int64                   `protobuf:"varint,3,opt,name=EndTime" json:"EndTime,omitempty"`
	ActType          *int32                   `protobuf:"varint,4,opt,name=ActType" json:"ActType,omitempty"`
	Type             *int32                   `protobuf:"varint,5,opt,name=Type" json:"Type,omitempty"`
	Priority         *int32                   `protobuf:"varint,6,opt,name=Priority" json:"Priority,omitempty"`
	ActName          *int32                   `protobuf:"varint,7,opt,name=ActName" json:"ActName,omitempty"`
	ActResource      *string                  `protobuf:"bytes,8,opt,name=ActResource" json:"ActResource,omitempty"`
	Rewards          []*Reward_Info_          `protobuf:"bytes,9,rep,name=Rewards" json:"Rewards,omitempty"`
	ActRewards       []*Activity_Reward_Info_ `protobuf:"bytes,10,rep,name=ActRewards" json:"ActRewards,omitempty"`
	ShowEndTime      *int64                   `protobuf:"varint,11,opt,name=ShowEndTime" json:"ShowEndTime,omitempty"`
	ItemID           []int32                  `protobuf:"varint,12,rep,name=ItemID" json:"ItemID,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *Activity_Info_) Reset()                    { *m = Activity_Info_{} }
func (m *Activity_Info_) String() string            { return proto.CompactTextString(m) }
func (*Activity_Info_) ProtoMessage()               {}
func (*Activity_Info_) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Activity_Info_) GetID() int32 {
	if m != nil && m.ID != nil {
		return *m.ID
	}
	return 0
}

func (m *Activity_Info_) GetOpenTime() int64 {
	if m != nil && m.OpenTime != nil {
		return *m.OpenTime
	}
	return 0
}

func (m *Activity_Info_) GetEndTime() int64 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *Activity_Info_) GetActType() int32 {
	if m != nil && m.ActType != nil {
		return *m.ActType
	}
	return 0
}

func (m *Activity_Info_) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *Activity_Info_) GetPriority() int32 {
	if m != nil && m.Priority != nil {
		return *m.Priority
	}
	return 0
}

func (m *Activity_Info_) GetActName() int32 {
	if m != nil && m.ActName != nil {
		return *m.ActName
	}
	return 0
}

func (m *Activity_Info_) GetActResource() string {
	if m != nil && m.ActResource != nil {
		return *m.ActResource
	}
	return ""
}

func (m *Activity_Info_) GetRewards() []*Reward_Info_ {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func (m *Activity_Info_) GetActRewards() []*Activity_Reward_Info_ {
	if m != nil {
		return m.ActRewards
	}
	return nil
}

func (m *Activity_Info_) GetShowEndTime() int64 {
	if m != nil && m.ShowEndTime != nil {
		return *m.ShowEndTime
	}
	return 0
}

func (m *Activity_Info_) GetItemID() []int32 {
	if m != nil {
		return m.ItemID
	}
	return nil
}

// 活动奖励数据
type Activity_Reward_Info_ struct {
	Value            *int32          `protobuf:"varint,1,opt,name=Value" json:"Value,omitempty"`
	Rewards          []*Reward_Info_ `protobuf:"bytes,2,rep,name=Rewards" json:"Rewards,omitempty"`
	BuyLimit         *int32          `protobuf:"varint,3,opt,name=BuyLimit" json:"BuyLimit,omitempty"`
	Desc             *string         `protobuf:"bytes,4,opt,name=Desc" json:"Desc,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Activity_Reward_Info_) Reset()                    { *m = Activity_Reward_Info_{} }
func (m *Activity_Reward_Info_) String() string            { return proto.CompactTextString(m) }
func (*Activity_Reward_Info_) ProtoMessage()               {}
func (*Activity_Reward_Info_) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Activity_Reward_Info_) GetValue() int32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *Activity_Reward_Info_) GetRewards() []*Reward_Info_ {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func (m *Activity_Reward_Info_) GetBuyLimit() int32 {
	if m != nil && m.BuyLimit != nil {
		return *m.BuyLimit
	}
	return 0
}

func (m *Activity_Reward_Info_) GetDesc() string {
	if m != nil && m.Desc != nil {
		return *m.Desc
	}
	return ""
}

// 更新活动静态数据
type Resp_Data_Activity_Update_ struct {
	ActID            *int32          `protobuf:"varint,1,opt,name=ActID" json:"ActID,omitempty"`
	Activity         *Activity_Info_ `protobuf:"bytes,2,opt,name=Activity" json:"Activity,omitempty"`
	RemActID         *int32          `protobuf:"varint,3,opt,name=RemActID" json:"RemActID,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Resp_Data_Activity_Update_) Reset()                    { *m = Resp_Data_Activity_Update_{} }
func (m *Resp_Data_Activity_Update_) String() string            { return proto.CompactTextString(m) }
func (*Resp_Data_Activity_Update_) ProtoMessage()               {}
func (*Resp_Data_Activity_Update_) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Resp_Data_Activity_Update_) GetActID() int32 {
	if m != nil && m.ActID != nil {
		return *m.ActID
	}
	return 0
}

func (m *Resp_Data_Activity_Update_) GetActivity() *Activity_Info_ {
	if m != nil {
		return m.Activity
	}
	return nil
}

func (m *Resp_Data_Activity_Update_) GetRemActID() int32 {
	if m != nil && m.RemActID != nil {
		return *m.RemActID
	}
	return 0
}

// 请求 活动数据（静态表现数据）
type Req_Data_Activity_ struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *Req_Data_Activity_) Reset()                    { *m = Req_Data_Activity_{} }
func (m *Req_Data_Activity_) String() string            { return proto.CompactTextString(m) }
func (*Req_Data_Activity_) ProtoMessage()               {}
func (*Req_Data_Activity_) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

// 响应 活动数据（静态表现数据）
type Resp_Data_Activity_ struct {
	IDList           []int32           `protobuf:"varint,1,rep,name=IDList" json:"IDList,omitempty"`
	Activities       []*Activity_Info_ `protobuf:"bytes,2,rep,name=Activities" json:"Activities,omitempty"`
	MonCardLimitDay  []int64           `protobuf:"varint,3,rep,name=MonCardLimitDay" json:"MonCardLimitDay,omitempty"`
	SupplySignCost   *Reward_Info_     `protobuf:"bytes,4,opt,name=SupplySignCost" json:"SupplySignCost,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *Resp_Data_Activity_) Reset()                    { *m = Resp_Data_Activity_{} }
func (m *Resp_Data_Activity_) String() string            { return proto.CompactTextString(m) }
func (*Resp_Data_Activity_) ProtoMessage()               {}
func (*Resp_Data_Activity_) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Resp_Data_Activity_) GetIDList() []int32 {
	if m != nil {
		return m.IDList
	}
	return nil
}

func (m *Resp_Data_Activity_) GetActivities() []*Activity_Info_ {
	if m != nil {
		return m.Activities
	}
	return nil
}

func (m *Resp_Data_Activity_) GetMonCardLimitDay() []int64 {
	if m != nil {
		return m.MonCardLimitDay
	}
	return nil
}

func (m *Resp_Data_Activity_) GetSupplySignCost() *Reward_Info_ {
	if m != nil {
		return m.SupplySignCost
	}
	return nil
}

// 请求 活动奖励领取
type Req_Activity_Reward_Rec_ struct {
	ID               *int32  `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	Value            *int32  `protobuf:"varint,2,opt,name=Value" json:"Value,omitempty"`
	Args             *string `protobuf:"bytes,3,opt,name=Args" json:"Args,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Req_Activity_Reward_Rec_) Reset()                    { *m = Req_Activity_Reward_Rec_{} }
func (m *Req_Activity_Reward_Rec_) String() string            { return proto.CompactTextString(m) }
func (*Req_Activity_Reward_Rec_) ProtoMessage()               {}
func (*Req_Activity_Reward_Rec_) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Req_Activity_Reward_Rec_) GetID() int32 {
	if m != nil && m.ID != nil {
		return *m.ID
	}
	return 0
}

func (m *Req_Activity_Reward_Rec_) GetValue() int32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *Req_Activity_Reward_Rec_) GetArgs() string {
	if m != nil && m.Args != nil {
		return *m.Args
	}
	return ""
}

// 响应 活动奖励领取
type Resp_Activity_Reward_Rec_ struct {
	Rewards          []*Reward_Info_ `protobuf:"bytes,1,rep,name=Rewards" json:"Rewards,omitempty"`
	ChestIcon        *int32          `protobuf:"varint,2,opt,name=ChestIcon" json:"ChestIcon,omitempty"`
	ChestRewards     []*Reward_Info_ `protobuf:"bytes,3,rep,name=ChestRewards" json:"ChestRewards,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Resp_Activity_Reward_Rec_) Reset()                    { *m = Resp_Activity_Reward_Rec_{} }
func (m *Resp_Activity_Reward_Rec_) String() string            { return proto.CompactTextString(m) }
func (*Resp_Activity_Reward_Rec_) ProtoMessage()               {}
func (*Resp_Activity_Reward_Rec_) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Resp_Activity_Reward_Rec_) GetRewards() []*Reward_Info_ {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func (m *Resp_Activity_Reward_Rec_) GetChestIcon() int32 {
	if m != nil && m.ChestIcon != nil {
		return *m.ChestIcon
	}
	return 0
}

func (m *Resp_Activity_Reward_Rec_) GetChestRewards() []*Reward_Info_ {
	if m != nil {
		return m.ChestRewards
	}
	return nil
}

// 成长基金数据
type GrowthCapital_ struct {
	ID               *int32  `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	RecValue         []int32 `protobuf:"varint,2,rep,name=RecValue" json:"RecValue,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GrowthCapital_) Reset()                    { *m = GrowthCapital_{} }
func (m *GrowthCapital_) String() string            { return proto.CompactTextString(m) }
func (*GrowthCapital_) ProtoMessage()               {}
func (*GrowthCapital_) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *GrowthCapital_) GetID() int32 {
	if m != nil && m.ID != nil {
		return *m.ID
	}
	return 0
}

func (m *GrowthCapital_) GetRecValue() []int32 {
	if m != nil {
		return m.RecValue
	}
	return nil
}

// 响应 玩家活动数据
type Resp_PlayerData_Activity_ struct {
	FirstChargeTag          *int32            `protobuf:"varint,1,opt,name=FirstChargeTag" json:"FirstChargeTag,omitempty"`
	NewSign                 []int32           `protobuf:"varint,2,rep,name=NewSign" json:"NewSign,omitempty"`
	WeekJackpot             *Reward_Info_     `protobuf:"bytes,3,opt,name=WeekJackpot" json:"WeekJackpot,omitempty"`
	MonJackpot              []*Reward_Info_   `protobuf:"bytes,4,rep,name=MonJackpot" json:"MonJackpot,omitempty"`
	MonExpiryTime           *int64            `protobuf:"varint,5,opt,name=MonExpiryTime" json:"MonExpiryTime,omitempty"`
	WeekExpiryTime          *int64            `protobuf:"varint,6,opt,name=WeekExpiryTime" json:"WeekExpiryTime,omitempty"`
	ChargeRewardID          []int32           `protobuf:"varint,7,rep,name=ChargeRewardID" json:"ChargeRewardID,omitempty"`
	Dinner                  *int32            `protobuf:"varint,8,opt,name=Dinner" json:"Dinner,omitempty"`
	NewGift                 []int32           `protobuf:"varint,9,rep,name=NewGift" json:"NewGift,omitempty"`
	DailyGift               []int32           `protobuf:"varint,10,rep,name=DailyGift" json:"DailyGift,omitempty"`
	LvGift                  []int32           `protobuf:"varint,11,rep,name=LvGift" json:"LvGift,omitempty"`
	FreeDraw                *int32            `protobuf:"varint,12,opt,name=FreeDraw" json:"FreeDraw,omitempty"`
	FreeNext                *int64            `protobuf:"varint,13,opt,name=FreeNext" json:"FreeNext,omitempty"`
	DrawScore               *int32            `protobuf:"varint,14,opt,name=DrawScore" json:"DrawScore,omitempty"`
	ScoreRewardState        []int32           `protobuf:"varint,15,rep,name=ScoreRewardState" json:"ScoreRewardState,omitempty"`
	SpendRewardID           []int32           `protobuf:"varint,18,rep,name=SpendRewardID" json:"SpendRewardID,omitempty"`
	LimitGiftTimes          []int32           `protobuf:"varint,19,rep,name=LimitGiftTimes" json:"LimitGiftTimes,omitempty"`
	LimitDrawShopTimes      []int32           `protobuf:"varint,20,rep,name=LimitDrawShopTimes" json:"LimitDrawShopTimes,omitempty"`
	LimitDrawMustBe         *int32            `protobuf:"varint,21,opt,name=LimitDrawMustBe" json:"LimitDrawMustBe,omitempty"`
	GCInfo                  []*GrowthCapital_ `protobuf:"bytes,22,rep,name=GCInfo" json:"GCInfo,omitempty"`
	FreePrizeWheel          *int32            `protobuf:"varint,23,opt,name=FreePrizeWheel" json:"FreePrizeWheel,omitempty"`
	FreePrizeWheelNext      *int64            `protobuf:"varint,24,opt,name=FreePrizeWheelNext" json:"FreePrizeWheelNext,omitempty"`
	PrizeWheelScore         *int32            `protobuf:"varint,25,opt,name=PrizeWheelScore" json:"PrizeWheelScore,omitempty"`
	NewSingleChargeState    *int32            `protobuf:"varint,26,opt,name=NewSingleChargeState" json:"NewSingleChargeState,omitempty"`
	ForeverJackpot          []*Reward_Info_   `protobuf:"bytes,27,rep,name=ForeverJackpot" json:"ForeverJackpot,omitempty"`
	ForeverExpiryTime       *int64            `protobuf:"varint,28,opt,name=ForeverExpiryTime" json:"ForeverExpiryTime,omitempty"`
	ContinueChargeState     []int32           `protobuf:"varint,29,rep,name=ContinueChargeState" json:"ContinueChargeState,omitempty"`
	ContinueChargeNum       []int32           `protobuf:"varint,30,rep,name=ContinueChargeNum" json:"ContinueChargeNum,omitempty"`
	ContinueChargeReward    []int32           `protobuf:"varint,31,rep,name=ContinueChargeReward" json:"ContinueChargeReward,omitempty"`
	SumPay                  *int32            `protobuf:"varint,32,opt,name=SumPay" json:"SumPay,omitempty"`
	NewContinueChargeState  []int32           `protobuf:"varint,33,rep,name=NewContinueChargeState" json:"NewContinueChargeState,omitempty"`
	NewContinueChargeNum    []int32           `protobuf:"varint,34,rep,name=NewContinueChargeNum" json:"NewContinueChargeNum,omitempty"`
	NewContinueChargeReward []int32           `protobuf:"varint,35,rep,name=NewContinueChargeReward" json:"NewContinueChargeReward,omitempty"`
	FixedDateSignState      []int32           `protobuf:"varint,36,rep,name=FixedDateSignState" json:"FixedDateSignState,omitempty"`
	ExchangeItem            []int32           `protobuf:"varint,37,rep,name=ExchangeItem" json:"ExchangeItem,omitempty"`
	XXX_unrecognized        []byte            `json:"-"`
}

func (m *Resp_PlayerData_Activity_) Reset()                    { *m = Resp_PlayerData_Activity_{} }
func (m *Resp_PlayerData_Activity_) String() string            { return proto.CompactTextString(m) }
func (*Resp_PlayerData_Activity_) ProtoMessage()               {}
func (*Resp_PlayerData_Activity_) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Resp_PlayerData_Activity_) GetFirstChargeTag() int32 {
	if m != nil && m.FirstChargeTag != nil {
		return *m.FirstChargeTag
	}
	return 0
}

func (m *Resp_PlayerData_Activity_) GetNewSign() []int32 {
	if m != nil {
		return m.NewSign
	}
	return nil
}

func (m *Resp_PlayerData_Activity_) GetWeekJackpot() *Reward_Info_ {
	if m != nil {
		return m.WeekJackpot
	}
	return nil
}

func (m *Resp_PlayerData_Activity_) GetMonJackpot() []*Reward_Info_ {
	if m != nil {
		return m.MonJackpot
	}
	return nil
}

func (m *Resp_PlayerData_Activity_) GetMonExpiryTime() int64 {
	if m != nil && m.MonExpiryTime != nil {
		return *m.MonExpiryTime
	}
	return 0
}

func (m *Resp_PlayerData_Activity_) GetWeekExpiryTime() int64 {
	if m != nil && m.WeekExpiryTime != nil {
		return *m.WeekExpiryTime
	}
	return 0
}

func (m *Resp_PlayerData_Activity_) GetChargeRewardID() []int32 {
	if m != nil {
		return m.ChargeRewardID
	}
	return nil
}

func (m *Resp_PlayerData_Activity_) GetDinner() int32 {
	if m != nil && m.Dinner != nil {
		return *m.Dinner
	}
	return 0
}

func (m *Resp_PlayerData_Activity_) GetNewGift() []int32 {
	if m != nil {
		return m.NewGift
	}
	return nil
}

func (m *Resp_PlayerData_Activity_) GetDailyGift() []int32 {
	if m != nil {
		return m.DailyGift
	}
	return nil
}

func (m *Resp_PlayerData_Activity_) GetLvGift() []int32 {
	if m != nil {
		return m.LvGift
	}
	return nil
}

func (m *Resp_PlayerData_Activity_) GetFreeDraw() int32 {
	if m != nil && m.FreeDraw != nil {
		return *m.FreeDraw
	}
	return 0
}

func (m *Resp_PlayerData_Activity_) GetFreeNext() int64 {
	if m != nil && m.FreeNext != nil {
		return *m.FreeNext
	}
	return 0
}

func (m *Resp_PlayerData_Activity_) GetDrawScore() int32 {
	if m != nil && m.DrawScore != nil {
		return *m.DrawScore
	}
	return 0
}

func (m *Resp_PlayerData_Activity_) GetScoreRewardState() []int32 {
	if m != nil {
		return m.ScoreRewardState
	}
	return nil
}

func (m *Resp_PlayerData_Activity_) GetSpendRewardID() []int32 {
	if m != nil {
		return m.SpendRewardID
	}
	return nil
}

func (m *Resp_PlayerData_Activity_) GetLimitGiftTimes() []int32 {
	if m != nil {
		return m.LimitGiftTimes
	}
	return nil
}

func (m *Resp_PlayerData_Activity_) GetLimitDrawShopTimes() []int32 {
	if m != nil {
		return m.LimitDrawShopTimes
	}
	return nil
}

func (m *Resp_PlayerData_Activity_) GetLimitDrawMustBe() int32 {
	if m != nil && m.LimitDrawMustBe != nil {
		return *m.LimitDrawMustBe
	}
	return 0
}

func (m *Resp_PlayerData_Activity_) GetGCInfo() []*GrowthCapital_ {
	if m != nil {
		return m.GCInfo
	}
	return nil
}

func (m *Resp_PlayerData_Activity_) GetFreePrizeWheel() int32 {
	if m != nil && m.FreePrizeWheel != nil {
		return *m.FreePrizeWheel
	}
	return 0
}

func (m *Resp_PlayerData_Activity_) GetFreePrizeWheelNext() int64 {
	if m != nil && m.FreePrizeWheelNext != nil {
		return *m.FreePrizeWheelNext
	}
	return 0
}

func (m *Resp_PlayerData_Activity_) GetPrizeWheelScore() int32 {
	if m != nil && m.PrizeWheelScore != nil {
		return *m.PrizeWheelScore
	}
	return 0
}

func (m *Resp_PlayerData_Activity_) GetNewSingleChargeState() int32 {
	if m != nil && m.NewSingleChargeState != nil {
		return *m.NewSingleChargeState
	}
	return 0
}

func (m *Resp_PlayerData_Activity_) GetForeverJackpot() []*Reward_Info_ {
	if m != nil {
		return m.ForeverJackpot
	}
	return nil
}

func (m *Resp_PlayerData_Activity_) GetForeverExpiryTime() int64 {
	if m != nil && m.ForeverExpiryTime != nil {
		return *m.ForeverExpiryTime
	}
	return 0
}

func (m *Resp_PlayerData_Activity_) GetContinueChargeState() []int32 {
	if m != nil {
		return m.ContinueChargeState
	}
	return nil
}

func (m *Resp_PlayerData_Activity_) GetContinueChargeNum() []int32 {
	if m != nil {
		return m.ContinueChargeNum
	}
	return nil
}

func (m *Resp_PlayerData_Activity_) GetContinueChargeReward() []int32 {
	if m != nil {
		return m.ContinueChargeReward
	}
	return nil
}

func (m *Resp_PlayerData_Activity_) GetSumPay() int32 {
	if m != nil && m.SumPay != nil {
		return *m.SumPay
	}
	return 0
}

func (m *Resp_PlayerData_Activity_) GetNewContinueChargeState() []int32 {
	if m != nil {
		return m.NewContinueChargeState
	}
	return nil
}

func (m *Resp_PlayerData_Activity_) GetNewContinueChargeNum() []int32 {
	if m != nil {
		return m.NewContinueChargeNum
	}
	return nil
}

func (m *Resp_PlayerData_Activity_) GetNewContinueChargeReward() []int32 {
	if m != nil {
		return m.NewContinueChargeReward
	}
	return nil
}

func (m *Resp_PlayerData_Activity_) GetFixedDateSignState() []int32 {
	if m != nil {
		return m.FixedDateSignState
	}
	return nil
}

func (m *Resp_PlayerData_Activity_) GetExchangeItem() []int32 {
	if m != nil {
		return m.ExchangeItem
	}
	return nil
}

// 更新 玩家活动数据
type Resp_PlayerUpdate_Activity_ struct {
	FirstChargeTag          *int32            `protobuf:"varint,1,opt,name=FirstChargeTag" json:"FirstChargeTag,omitempty"`
	NewSign                 []int32           `protobuf:"varint,2,rep,name=NewSign" json:"NewSign,omitempty"`
	WeekJackpot             *Reward_Info_     `protobuf:"bytes,3,opt,name=WeekJackpot" json:"WeekJackpot,omitempty"`
	MonJackpot              []*Reward_Info_   `protobuf:"bytes,4,rep,name=MonJackpot" json:"MonJackpot,omitempty"`
	MonExpiryTime           *int64            `protobuf:"varint,5,opt,name=MonExpiryTime" json:"MonExpiryTime,omitempty"`
	WeekExpiryTime          *int64            `protobuf:"varint,6,opt,name=WeekExpiryTime" json:"WeekExpiryTime,omitempty"`
	ChargeRewardID          []int32           `protobuf:"varint,7,rep,name=ChargeRewardID" json:"ChargeRewardID,omitempty"`
	Dinner                  *int32            `protobuf:"varint,8,opt,name=Dinner" json:"Dinner,omitempty"`
	NewGift                 []int32           `protobuf:"varint,9,rep,name=NewGift" json:"NewGift,omitempty"`
	DailyGift               []int32           `protobuf:"varint,10,rep,name=DailyGift" json:"DailyGift,omitempty"`
	LvGift                  []int32           `protobuf:"varint,11,rep,name=LvGift" json:"LvGift,omitempty"`
	FreeDraw                *int32            `protobuf:"varint,12,opt,name=FreeDraw" json:"FreeDraw,omitempty"`
	FreeNext                *int64            `protobuf:"varint,13,opt,name=FreeNext" json:"FreeNext,omitempty"`
	DrawScore               *int32            `protobuf:"varint,14,opt,name=DrawScore" json:"DrawScore,omitempty"`
	ScoreRewardState        []int32           `protobuf:"varint,15,rep,name=ScoreRewardState" json:"ScoreRewardState,omitempty"`
	SpendRewardID           []int32           `protobuf:"varint,18,rep,name=SpendRewardID" json:"SpendRewardID,omitempty"`
	LimitGiftTimes          []int32           `protobuf:"varint,19,rep,name=LimitGiftTimes" json:"LimitGiftTimes,omitempty"`
	LimitDrawShopTimes      []int32           `protobuf:"varint,20,rep,name=LimitDrawShopTimes" json:"LimitDrawShopTimes,omitempty"`
	LimitDrawMustBe         *int32            `protobuf:"varint,21,opt,name=LimitDrawMustBe" json:"LimitDrawMustBe,omitempty"`
	GCInfo                  []*GrowthCapital_ `protobuf:"bytes,22,rep,name=GCInfo" json:"GCInfo,omitempty"`
	FreePrizeWheel          *int32            `protobuf:"varint,23,opt,name=FreePrizeWheel" json:"FreePrizeWheel,omitempty"`
	FreePrizeWheelNext      *int64            `protobuf:"varint,24,opt,name=FreePrizeWheelNext" json:"FreePrizeWheelNext,omitempty"`
	PrizeWheelScore         *int32            `protobuf:"varint,25,opt,name=PrizeWheelScore" json:"PrizeWheelScore,omitempty"`
	NewSingleChargeState    *int32            `protobuf:"varint,26,opt,name=NewSingleChargeState" json:"NewSingleChargeState,omitempty"`
	ForeverJackpot          []*Reward_Info_   `protobuf:"bytes,27,rep,name=ForeverJackpot" json:"ForeverJackpot,omitempty"`
	ForeverExpiryTime       *int64            `protobuf:"varint,28,opt,name=ForeverExpiryTime" json:"ForeverExpiryTime,omitempty"`
	ContinueChargeState     []int32           `protobuf:"varint,29,rep,name=ContinueChargeState" json:"ContinueChargeState,omitempty"`
	ContinueChargeNum       []int32           `protobuf:"varint,30,rep,name=ContinueChargeNum" json:"ContinueChargeNum,omitempty"`
	ContinueChargeReward    []int32           `protobuf:"varint,31,rep,name=ContinueChargeReward" json:"ContinueChargeReward,omitempty"`
	SumPay                  *int32            `protobuf:"varint,32,opt,name=SumPay" json:"SumPay,omitempty"`
	NewContinueChargeState  []int32           `protobuf:"varint,33,rep,name=NewContinueChargeState" json:"NewContinueChargeState,omitempty"`
	NewContinueChargeNum    []int32           `protobuf:"varint,34,rep,name=NewContinueChargeNum" json:"NewContinueChargeNum,omitempty"`
	NewContinueChargeReward []int32           `protobuf:"varint,35,rep,name=NewContinueChargeReward" json:"NewContinueChargeReward,omitempty"`
	FixedDateSignState      []int32           `protobuf:"varint,36,rep,name=FixedDateSignState" json:"FixedDateSignState,omitempty"`
	ExchangeItem            []int32           `protobuf:"varint,37,rep,name=ExchangeItem" json:"ExchangeItem,omitempty"`
	XXX_unrecognized        []byte            `json:"-"`
}

func (m *Resp_PlayerUpdate_Activity_) Reset()                    { *m = Resp_PlayerUpdate_Activity_{} }
func (m *Resp_PlayerUpdate_Activity_) String() string            { return proto.CompactTextString(m) }
func (*Resp_PlayerUpdate_Activity_) ProtoMessage()               {}
func (*Resp_PlayerUpdate_Activity_) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Resp_PlayerUpdate_Activity_) GetFirstChargeTag() int32 {
	if m != nil && m.FirstChargeTag != nil {
		return *m.FirstChargeTag
	}
	return 0
}

func (m *Resp_PlayerUpdate_Activity_) GetNewSign() []int32 {
	if m != nil {
		return m.NewSign
	}
	return nil
}

func (m *Resp_PlayerUpdate_Activity_) GetWeekJackpot() *Reward_Info_ {
	if m != nil {
		return m.WeekJackpot
	}
	return nil
}

func (m *Resp_PlayerUpdate_Activity_) GetMonJackpot() []*Reward_Info_ {
	if m != nil {
		return m.MonJackpot
	}
	return nil
}

func (m *Resp_PlayerUpdate_Activity_) GetMonExpiryTime() int64 {
	if m != nil && m.MonExpiryTime != nil {
		return *m.MonExpiryTime
	}
	return 0
}

func (m *Resp_PlayerUpdate_Activity_) GetWeekExpiryTime() int64 {
	if m != nil && m.WeekExpiryTime != nil {
		return *m.WeekExpiryTime
	}
	return 0
}

func (m *Resp_PlayerUpdate_Activity_) GetChargeRewardID() []int32 {
	if m != nil {
		return m.ChargeRewardID
	}
	return nil
}

func (m *Resp_PlayerUpdate_Activity_) GetDinner() int32 {
	if m != nil && m.Dinner != nil {
		return *m.Dinner
	}
	return 0
}

func (m *Resp_PlayerUpdate_Activity_) GetNewGift() []int32 {
	if m != nil {
		return m.NewGift
	}
	return nil
}

func (m *Resp_PlayerUpdate_Activity_) GetDailyGift() []int32 {
	if m != nil {
		return m.DailyGift
	}
	return nil
}

func (m *Resp_PlayerUpdate_Activity_) GetLvGift() []int32 {
	if m != nil {
		return m.LvGift
	}
	return nil
}

func (m *Resp_PlayerUpdate_Activity_) GetFreeDraw() int32 {
	if m != nil && m.FreeDraw != nil {
		return *m.FreeDraw
	}
	return 0
}

func (m *Resp_PlayerUpdate_Activity_) GetFreeNext() int64 {
	if m != nil && m.FreeNext != nil {
		return *m.FreeNext
	}
	return 0
}

func (m *Resp_PlayerUpdate_Activity_) GetDrawScore() int32 {
	if m != nil && m.DrawScore != nil {
		return *m.DrawScore
	}
	return 0
}

func (m *Resp_PlayerUpdate_Activity_) GetScoreRewardState() []int32 {
	if m != nil {
		return m.ScoreRewardState
	}
	return nil
}

func (m *Resp_PlayerUpdate_Activity_) GetSpendRewardID() []int32 {
	if m != nil {
		return m.SpendRewardID
	}
	return nil
}

func (m *Resp_PlayerUpdate_Activity_) GetLimitGiftTimes() []int32 {
	if m != nil {
		return m.LimitGiftTimes
	}
	return nil
}

func (m *Resp_PlayerUpdate_Activity_) GetLimitDrawShopTimes() []int32 {
	if m != nil {
		return m.LimitDrawShopTimes
	}
	return nil
}

func (m *Resp_PlayerUpdate_Activity_) GetLimitDrawMustBe() int32 {
	if m != nil && m.LimitDrawMustBe != nil {
		return *m.LimitDrawMustBe
	}
	return 0
}

func (m *Resp_PlayerUpdate_Activity_) GetGCInfo() []*GrowthCapital_ {
	if m != nil {
		return m.GCInfo
	}
	return nil
}

func (m *Resp_PlayerUpdate_Activity_) GetFreePrizeWheel() int32 {
	if m != nil && m.FreePrizeWheel != nil {
		return *m.FreePrizeWheel
	}
	return 0
}

func (m *Resp_PlayerUpdate_Activity_) GetFreePrizeWheelNext() int64 {
	if m != nil && m.FreePrizeWheelNext != nil {
		return *m.FreePrizeWheelNext
	}
	return 0
}

func (m *Resp_PlayerUpdate_Activity_) GetPrizeWheelScore() int32 {
	if m != nil && m.PrizeWheelScore != nil {
		return *m.PrizeWheelScore
	}
	return 0
}

func (m *Resp_PlayerUpdate_Activity_) GetNewSingleChargeState() int32 {
	if m != nil && m.NewSingleChargeState != nil {
		return *m.NewSingleChargeState
	}
	return 0
}

func (m *Resp_PlayerUpdate_Activity_) GetForeverJackpot() []*Reward_Info_ {
	if m != nil {
		return m.ForeverJackpot
	}
	return nil
}

func (m *Resp_PlayerUpdate_Activity_) GetForeverExpiryTime() int64 {
	if m != nil && m.ForeverExpiryTime != nil {
		return *m.ForeverExpiryTime
	}
	return 0
}

func (m *Resp_PlayerUpdate_Activity_) GetContinueChargeState() []int32 {
	if m != nil {
		return m.ContinueChargeState
	}
	return nil
}

func (m *Resp_PlayerUpdate_Activity_) GetContinueChargeNum() []int32 {
	if m != nil {
		return m.ContinueChargeNum
	}
	return nil
}

func (m *Resp_PlayerUpdate_Activity_) GetContinueChargeReward() []int32 {
	if m != nil {
		return m.ContinueChargeReward
	}
	return nil
}

func (m *Resp_PlayerUpdate_Activity_) GetSumPay() int32 {
	if m != nil && m.SumPay != nil {
		return *m.SumPay
	}
	return 0
}

func (m *Resp_PlayerUpdate_Activity_) GetNewContinueChargeState() []int32 {
	if m != nil {
		return m.NewContinueChargeState
	}
	return nil
}

func (m *Resp_PlayerUpdate_Activity_) GetNewContinueChargeNum() []int32 {
	if m != nil {
		return m.NewContinueChargeNum
	}
	return nil
}

func (m *Resp_PlayerUpdate_Activity_) GetNewContinueChargeReward() []int32 {
	if m != nil {
		return m.NewContinueChargeReward
	}
	return nil
}

func (m *Resp_PlayerUpdate_Activity_) GetFixedDateSignState() []int32 {
	if m != nil {
		return m.FixedDateSignState
	}
	return nil
}

func (m *Resp_PlayerUpdate_Activity_) GetExchangeItem() []int32 {
	if m != nil {
		return m.ExchangeItem
	}
	return nil
}

// 请求 礼包领取
type Req_Gift_ struct {
	UserID           *int64  `protobuf:"varint,1,opt,name=UserID" json:"UserID,omitempty"`
	Code             *string `protobuf:"bytes,2,opt,name=Code" json:"Code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Req_Gift_) Reset()                    { *m = Req_Gift_{} }
func (m *Req_Gift_) String() string            { return proto.CompactTextString(m) }
func (*Req_Gift_) ProtoMessage()               {}
func (*Req_Gift_) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *Req_Gift_) GetUserID() int64 {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return 0
}

func (m *Req_Gift_) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

// 响应 礼包领取
type Resp_Gift_ struct {
	UserID           *int64          `protobuf:"varint,1,opt,name=UserID" json:"UserID,omitempty"`
	Gift             *string         `protobuf:"bytes,2,opt,name=Gift" json:"Gift,omitempty"`
	Err              *int32          `protobuf:"varint,3,opt,name=Err" json:"Err,omitempty"`
	Rewards          []*Reward_Info_ `protobuf:"bytes,4,rep,name=Rewards" json:"Rewards,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Resp_Gift_) Reset()                    { *m = Resp_Gift_{} }
func (m *Resp_Gift_) String() string            { return proto.CompactTextString(m) }
func (*Resp_Gift_) ProtoMessage()               {}
func (*Resp_Gift_) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *Resp_Gift_) GetUserID() int64 {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return 0
}

func (m *Resp_Gift_) GetGift() string {
	if m != nil && m.Gift != nil {
		return *m.Gift
	}
	return ""
}

func (m *Resp_Gift_) GetErr() int32 {
	if m != nil && m.Err != nil {
		return *m.Err
	}
	return 0
}

func (m *Resp_Gift_) GetRewards() []*Reward_Info_ {
	if m != nil {
		return m.Rewards
	}
	return nil
}

// 积分奖励
type Score_Reward_ struct {
	Rewards          []*Reward_Info_ `protobuf:"bytes,1,rep,name=Rewards" json:"Rewards,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Score_Reward_) Reset()                    { *m = Score_Reward_{} }
func (m *Score_Reward_) String() string            { return proto.CompactTextString(m) }
func (*Score_Reward_) ProtoMessage()               {}
func (*Score_Reward_) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *Score_Reward_) GetRewards() []*Reward_Info_ {
	if m != nil {
		return m.Rewards
	}
	return nil
}

// 响应 连续充值活动（静态数据）
type Resp_Continue_Charge_ struct {
	ContinueCharge   []*Activity_Reward_Info_ `protobuf:"bytes,1,rep,name=ContinueCharge" json:"ContinueCharge,omitempty"`
	ChargeReward     []*Activity_Reward_Info_ `protobuf:"bytes,2,rep,name=ChargeReward" json:"ChargeReward,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *Resp_Continue_Charge_) Reset()                    { *m = Resp_Continue_Charge_{} }
func (m *Resp_Continue_Charge_) String() string            { return proto.CompactTextString(m) }
func (*Resp_Continue_Charge_) ProtoMessage()               {}
func (*Resp_Continue_Charge_) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *Resp_Continue_Charge_) GetContinueCharge() []*Activity_Reward_Info_ {
	if m != nil {
		return m.ContinueCharge
	}
	return nil
}

func (m *Resp_Continue_Charge_) GetChargeReward() []*Activity_Reward_Info_ {
	if m != nil {
		return m.ChargeReward
	}
	return nil
}

// 响应 新手7日充值活动（静态数据）
type Resp_New_Continue_Charge_ struct {
	NewContinueCharge []*Activity_Reward_Info_ `protobuf:"bytes,1,rep,name=NewContinueCharge" json:"NewContinueCharge,omitempty"`
	NewChargeReward   []*Activity_Reward_Info_ `protobuf:"bytes,2,rep,name=NewChargeReward" json:"NewChargeReward,omitempty"`
	XXX_unrecognized  []byte                   `json:"-"`
}

func (m *Resp_New_Continue_Charge_) Reset()                    { *m = Resp_New_Continue_Charge_{} }
func (m *Resp_New_Continue_Charge_) String() string            { return proto.CompactTextString(m) }
func (*Resp_New_Continue_Charge_) ProtoMessage()               {}
func (*Resp_New_Continue_Charge_) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *Resp_New_Continue_Charge_) GetNewContinueCharge() []*Activity_Reward_Info_ {
	if m != nil {
		return m.NewContinueCharge
	}
	return nil
}

func (m *Resp_New_Continue_Charge_) GetNewChargeReward() []*Activity_Reward_Info_ {
	if m != nil {
		return m.NewChargeReward
	}
	return nil
}

// 请求 连续充值活动奖励领取
type Req_Continue_Charge_Rec_ struct {
	Type             *int32 `protobuf:"varint,1,opt,name=Type" json:"Type,omitempty"`
	ID               *int32 `protobuf:"varint,2,opt,name=ID" json:"ID,omitempty"`
	IsNewCharge      *bool  `protobuf:"varint,3,opt,name=IsNewCharge" json:"IsNewCharge,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Req_Continue_Charge_Rec_) Reset()                    { *m = Req_Continue_Charge_Rec_{} }
func (m *Req_Continue_Charge_Rec_) String() string            { return proto.CompactTextString(m) }
func (*Req_Continue_Charge_Rec_) ProtoMessage()               {}
func (*Req_Continue_Charge_Rec_) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *Req_Continue_Charge_Rec_) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *Req_Continue_Charge_Rec_) GetID() int32 {
	if m != nil && m.ID != nil {
		return *m.ID
	}
	return 0
}

func (m *Req_Continue_Charge_Rec_) GetIsNewCharge() bool {
	if m != nil && m.IsNewCharge != nil {
		return *m.IsNewCharge
	}
	return false
}

// 响应 连续充值活动奖励领取
type Resp_Continue_Charge_Rec_ struct {
	Rewards          []*Reward_Info_ `protobuf:"bytes,1,rep,name=Rewards" json:"Rewards,omitempty"`
	ChestIcon        *int32          `protobuf:"varint,2,opt,name=ChestIcon" json:"ChestIcon,omitempty"`
	ChestRewards     []*Reward_Info_ `protobuf:"bytes,3,rep,name=ChestRewards" json:"ChestRewards,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Resp_Continue_Charge_Rec_) Reset()                    { *m = Resp_Continue_Charge_Rec_{} }
func (m *Resp_Continue_Charge_Rec_) String() string            { return proto.CompactTextString(m) }
func (*Resp_Continue_Charge_Rec_) ProtoMessage()               {}
func (*Resp_Continue_Charge_Rec_) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *Resp_Continue_Charge_Rec_) GetRewards() []*Reward_Info_ {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func (m *Resp_Continue_Charge_Rec_) GetChestIcon() int32 {
	if m != nil && m.ChestIcon != nil {
		return *m.ChestIcon
	}
	return 0
}

func (m *Resp_Continue_Charge_Rec_) GetChestRewards() []*Reward_Info_ {
	if m != nil {
		return m.ChestRewards
	}
	return nil
}

// 抽卡商店
type LimitDraw_Shop_ struct {
	ID               *int32          `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	Goods            []*Reward_Info_ `protobuf:"bytes,2,rep,name=Goods" json:"Goods,omitempty"`
	Limit            *int32          `protobuf:"varint,3,opt,name=Limit" json:"Limit,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *LimitDraw_Shop_) Reset()                    { *m = LimitDraw_Shop_{} }
func (m *LimitDraw_Shop_) String() string            { return proto.CompactTextString(m) }
func (*LimitDraw_Shop_) ProtoMessage()               {}
func (*LimitDraw_Shop_) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *LimitDraw_Shop_) GetID() int32 {
	if m != nil && m.ID != nil {
		return *m.ID
	}
	return 0
}

func (m *LimitDraw_Shop_) GetGoods() []*Reward_Info_ {
	if m != nil {
		return m.Goods
	}
	return nil
}

func (m *LimitDraw_Shop_) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

// 响应 限时抽卡(静态数据)
type Resp_Limit_Draw_ struct {
	ScoreIcon        []int32            `protobuf:"varint,1,rep,name=ScoreIcon" json:"ScoreIcon,omitempty"`
	Score            []int32            `protobuf:"varint,2,rep,name=Score" json:"Score,omitempty"`
	Rewards          []*Score_Reward_   `protobuf:"bytes,3,rep,name=Rewards" json:"Rewards,omitempty"`
	One              *Reward_Info_      `protobuf:"bytes,4,opt,name=One" json:"One,omitempty"`
	Ten              *Reward_Info_      `protobuf:"bytes,5,opt,name=Ten" json:"Ten,omitempty"`
	FamilyID         []int32            `protobuf:"varint,6,rep,name=FamilyID" json:"FamilyID,omitempty"`
	Shop             []*LimitDraw_Shop_ `protobuf:"bytes,7,rep,name=Shop" json:"Shop,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *Resp_Limit_Draw_) Reset()                    { *m = Resp_Limit_Draw_{} }
func (m *Resp_Limit_Draw_) String() string            { return proto.CompactTextString(m) }
func (*Resp_Limit_Draw_) ProtoMessage()               {}
func (*Resp_Limit_Draw_) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *Resp_Limit_Draw_) GetScoreIcon() []int32 {
	if m != nil {
		return m.ScoreIcon
	}
	return nil
}

func (m *Resp_Limit_Draw_) GetScore() []int32 {
	if m != nil {
		return m.Score
	}
	return nil
}

func (m *Resp_Limit_Draw_) GetRewards() []*Score_Reward_ {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func (m *Resp_Limit_Draw_) GetOne() *Reward_Info_ {
	if m != nil {
		return m.One
	}
	return nil
}

func (m *Resp_Limit_Draw_) GetTen() *Reward_Info_ {
	if m != nil {
		return m.Ten
	}
	return nil
}

func (m *Resp_Limit_Draw_) GetFamilyID() []int32 {
	if m != nil {
		return m.FamilyID
	}
	return nil
}

func (m *Resp_Limit_Draw_) GetShop() []*LimitDraw_Shop_ {
	if m != nil {
		return m.Shop
	}
	return nil
}

// 请求 抽卡
type Req_Draw_ struct {
	Num              *int32 `protobuf:"varint,1,opt,name=Num" json:"Num,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Req_Draw_) Reset()                    { *m = Req_Draw_{} }
func (m *Req_Draw_) String() string            { return proto.CompactTextString(m) }
func (*Req_Draw_) ProtoMessage()               {}
func (*Req_Draw_) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *Req_Draw_) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

// 响应 抽卡
type Resp_Draw_ struct {
	Rewards          []*Reward_Info_ `protobuf:"bytes,1,rep,name=Rewards" json:"Rewards,omitempty"`
	ExtraReward      []*Reward_Info_ `protobuf:"bytes,2,rep,name=ExtraReward" json:"ExtraReward,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Resp_Draw_) Reset()                    { *m = Resp_Draw_{} }
func (m *Resp_Draw_) String() string            { return proto.CompactTextString(m) }
func (*Resp_Draw_) ProtoMessage()               {}
func (*Resp_Draw_) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *Resp_Draw_) GetRewards() []*Reward_Info_ {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func (m *Resp_Draw_) GetExtraReward() []*Reward_Info_ {
	if m != nil {
		return m.ExtraReward
	}
	return nil
}

// 请求 大转盘
type Req_PrizeWheel_ struct {
	Num              *int32 `protobuf:"varint,1,opt,name=Num" json:"Num,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Req_PrizeWheel_) Reset()                    { *m = Req_PrizeWheel_{} }
func (m *Req_PrizeWheel_) String() string            { return proto.CompactTextString(m) }
func (*Req_PrizeWheel_) ProtoMessage()               {}
func (*Req_PrizeWheel_) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *Req_PrizeWheel_) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

// 响应 大转盘
type Resp_PrizeWheel_ struct {
	Rewards          []*Activity_Reward_Info_ `protobuf:"bytes,1,rep,name=Rewards" json:"Rewards,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *Resp_PrizeWheel_) Reset()                    { *m = Resp_PrizeWheel_{} }
func (m *Resp_PrizeWheel_) String() string            { return proto.CompactTextString(m) }
func (*Resp_PrizeWheel_) ProtoMessage()               {}
func (*Resp_PrizeWheel_) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *Resp_PrizeWheel_) GetRewards() []*Activity_Reward_Info_ {
	if m != nil {
		return m.Rewards
	}
	return nil
}

// 请求 领取抽卡积分奖励
type Req_Rec_Draw_ struct {
	Score            *int32 `protobuf:"varint,1,opt,name=Score" json:"Score,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Req_Rec_Draw_) Reset()                    { *m = Req_Rec_Draw_{} }
func (m *Req_Rec_Draw_) String() string            { return proto.CompactTextString(m) }
func (*Req_Rec_Draw_) ProtoMessage()               {}
func (*Req_Rec_Draw_) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *Req_Rec_Draw_) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

// 响应 领取抽卡积分奖励
type Resp_Rec_Draw_ struct {
	Rewards          []*Reward_Info_ `protobuf:"bytes,1,rep,name=Rewards" json:"Rewards,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Resp_Rec_Draw_) Reset()                    { *m = Resp_Rec_Draw_{} }
func (m *Resp_Rec_Draw_) String() string            { return proto.CompactTextString(m) }
func (*Resp_Rec_Draw_) ProtoMessage()               {}
func (*Resp_Rec_Draw_) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *Resp_Rec_Draw_) GetRewards() []*Reward_Info_ {
	if m != nil {
		return m.Rewards
	}
	return nil
}

// 响应 成长基金（静态数据）
type Resp_GrowthCapital_ struct {
	Infos            []*GrowthCapital_Info_ `protobuf:"bytes,1,rep,name=Infos" json:"Infos,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *Resp_GrowthCapital_) Reset()                    { *m = Resp_GrowthCapital_{} }
func (m *Resp_GrowthCapital_) String() string            { return proto.CompactTextString(m) }
func (*Resp_GrowthCapital_) ProtoMessage()               {}
func (*Resp_GrowthCapital_) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *Resp_GrowthCapital_) GetInfos() []*GrowthCapital_Info_ {
	if m != nil {
		return m.Infos
	}
	return nil
}

type GrowthCapital_Info_ struct {
	GCShopID         *int32                   `protobuf:"varint,1,opt,name=GCShopID" json:"GCShopID,omitempty"`
	BuyLv            *int32                   `protobuf:"varint,2,opt,name=BuyLv" json:"BuyLv,omitempty"`
	Rewards          []*Activity_Reward_Info_ `protobuf:"bytes,3,rep,name=Rewards" json:"Rewards,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *GrowthCapital_Info_) Reset()                    { *m = GrowthCapital_Info_{} }
func (m *GrowthCapital_Info_) String() string            { return proto.CompactTextString(m) }
func (*GrowthCapital_Info_) ProtoMessage()               {}
func (*GrowthCapital_Info_) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *GrowthCapital_Info_) GetGCShopID() int32 {
	if m != nil && m.GCShopID != nil {
		return *m.GCShopID
	}
	return 0
}

func (m *GrowthCapital_Info_) GetBuyLv() int32 {
	if m != nil && m.BuyLv != nil {
		return *m.BuyLv
	}
	return 0
}

func (m *GrowthCapital_Info_) GetRewards() []*Activity_Reward_Info_ {
	if m != nil {
		return m.Rewards
	}
	return nil
}

// 道具兑换
type Resp_Exchange_Item_Data_ struct {
	ExchangeData     []*Exchange_Item_Data_ `protobuf:"bytes,1,rep,name=ExchangeData" json:"ExchangeData,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *Resp_Exchange_Item_Data_) Reset()                    { *m = Resp_Exchange_Item_Data_{} }
func (m *Resp_Exchange_Item_Data_) String() string            { return proto.CompactTextString(m) }
func (*Resp_Exchange_Item_Data_) ProtoMessage()               {}
func (*Resp_Exchange_Item_Data_) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *Resp_Exchange_Item_Data_) GetExchangeData() []*Exchange_Item_Data_ {
	if m != nil {
		return m.ExchangeData
	}
	return nil
}

type Exchange_Item_Data_ struct {
	ExchangeID       *int32          `protobuf:"varint,1,opt,name=ExchangeID" json:"ExchangeID,omitempty"`
	Cost             []*Reward_Info_ `protobuf:"bytes,2,rep,name=Cost" json:"Cost,omitempty"`
	Reward           *Reward_Info_   `protobuf:"bytes,3,opt,name=Reward" json:"Reward,omitempty"`
	Limit            *int32          `protobuf:"varint,4,opt,name=Limit" json:"Limit,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Exchange_Item_Data_) Reset()                    { *m = Exchange_Item_Data_{} }
func (m *Exchange_Item_Data_) String() string            { return proto.CompactTextString(m) }
func (*Exchange_Item_Data_) ProtoMessage()               {}
func (*Exchange_Item_Data_) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *Exchange_Item_Data_) GetExchangeID() int32 {
	if m != nil && m.ExchangeID != nil {
		return *m.ExchangeID
	}
	return 0
}

func (m *Exchange_Item_Data_) GetCost() []*Reward_Info_ {
	if m != nil {
		return m.Cost
	}
	return nil
}

func (m *Exchange_Item_Data_) GetReward() *Reward_Info_ {
	if m != nil {
		return m.Reward
	}
	return nil
}

func (m *Exchange_Item_Data_) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

// 更新玩家特权
type Resp_Update_Player_Privileges_ struct {
	Step             *int32 `protobuf:"varint,1,opt,name=Step" json:"Step,omitempty"`
	VitBuyTimes      *int32 `protobuf:"varint,2,opt,name=VitBuyTimes" json:"VitBuyTimes,omitempty"`
	DrawHighFree     *int32 `protobuf:"varint,3,opt,name=DrawHighFree" json:"DrawHighFree,omitempty"`
	VitBuyTimesLimit *int32 `protobuf:"varint,4,opt,name=VitBuyTimesLimit" json:"VitBuyTimesLimit,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Resp_Update_Player_Privileges_) Reset()                    { *m = Resp_Update_Player_Privileges_{} }
func (m *Resp_Update_Player_Privileges_) String() string            { return proto.CompactTextString(m) }
func (*Resp_Update_Player_Privileges_) ProtoMessage()               {}
func (*Resp_Update_Player_Privileges_) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *Resp_Update_Player_Privileges_) GetStep() int32 {
	if m != nil && m.Step != nil {
		return *m.Step
	}
	return 0
}

func (m *Resp_Update_Player_Privileges_) GetVitBuyTimes() int32 {
	if m != nil && m.VitBuyTimes != nil {
		return *m.VitBuyTimes
	}
	return 0
}

func (m *Resp_Update_Player_Privileges_) GetDrawHighFree() int32 {
	if m != nil && m.DrawHighFree != nil {
		return *m.DrawHighFree
	}
	return 0
}

func (m *Resp_Update_Player_Privileges_) GetVitBuyTimesLimit() int32 {
	if m != nil && m.VitBuyTimesLimit != nil {
		return *m.VitBuyTimesLimit
	}
	return 0
}

func init() {
	proto.RegisterType((*Activity_Info_)(nil), "protocol.Activity_Info_")
	proto.RegisterType((*Activity_Reward_Info_)(nil), "protocol.Activity_Reward_Info_")
	proto.RegisterType((*Resp_Data_Activity_Update_)(nil), "protocol.Resp_Data_Activity_Update_")
	proto.RegisterType((*Req_Data_Activity_)(nil), "protocol.Req_Data_Activity_")
	proto.RegisterType((*Resp_Data_Activity_)(nil), "protocol.Resp_Data_Activity_")
	proto.RegisterType((*Req_Activity_Reward_Rec_)(nil), "protocol.Req_Activity_Reward_Rec_")
	proto.RegisterType((*Resp_Activity_Reward_Rec_)(nil), "protocol.Resp_Activity_Reward_Rec_")
	proto.RegisterType((*GrowthCapital_)(nil), "protocol.GrowthCapital_")
	proto.RegisterType((*Resp_PlayerData_Activity_)(nil), "protocol.Resp_PlayerData_Activity_")
	proto.RegisterType((*Resp_PlayerUpdate_Activity_)(nil), "protocol.Resp_PlayerUpdate_Activity_")
	proto.RegisterType((*Req_Gift_)(nil), "protocol.Req_Gift_")
	proto.RegisterType((*Resp_Gift_)(nil), "protocol.Resp_Gift_")
	proto.RegisterType((*Score_Reward_)(nil), "protocol.Score_Reward_")
	proto.RegisterType((*Resp_Continue_Charge_)(nil), "protocol.Resp_Continue_Charge_")
	proto.RegisterType((*Resp_New_Continue_Charge_)(nil), "protocol.Resp_New_Continue_Charge_")
	proto.RegisterType((*Req_Continue_Charge_Rec_)(nil), "protocol.Req_Continue_Charge_Rec_")
	proto.RegisterType((*Resp_Continue_Charge_Rec_)(nil), "protocol.Resp_Continue_Charge_Rec_")
	proto.RegisterType((*LimitDraw_Shop_)(nil), "protocol.LimitDraw_Shop_")
	proto.RegisterType((*Resp_Limit_Draw_)(nil), "protocol.Resp_Limit_Draw_")
	proto.RegisterType((*Req_Draw_)(nil), "protocol.Req_Draw_")
	proto.RegisterType((*Resp_Draw_)(nil), "protocol.Resp_Draw_")
	proto.RegisterType((*Req_PrizeWheel_)(nil), "protocol.Req_PrizeWheel_")
	proto.RegisterType((*Resp_PrizeWheel_)(nil), "protocol.Resp_PrizeWheel_")
	proto.RegisterType((*Req_Rec_Draw_)(nil), "protocol.Req_Rec_Draw_")
	proto.RegisterType((*Resp_Rec_Draw_)(nil), "protocol.Resp_Rec_Draw_")
	proto.RegisterType((*Resp_GrowthCapital_)(nil), "protocol.Resp_GrowthCapital_")
	proto.RegisterType((*GrowthCapital_Info_)(nil), "protocol.GrowthCapital_Info_")
	proto.RegisterType((*Resp_Exchange_Item_Data_)(nil), "protocol.Resp_Exchange_Item_Data_")
	proto.RegisterType((*Exchange_Item_Data_)(nil), "protocol.Exchange_Item_Data_")
	proto.RegisterType((*Resp_Update_Player_Privileges_)(nil), "protocol.Resp_Update_Player_Privileges_")
}

func init() { proto.RegisterFile("activity.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1375 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xec, 0x58, 0x4f, 0x53, 0xdb, 0x56,
	0x10, 0x1f, 0xdb, 0xd8, 0xc6, 0x6b, 0x30, 0x20, 0xfe, 0x09, 0x48, 0x80, 0x2a, 0x49, 0x43, 0x53,
	0x86, 0xc9, 0x90, 0xe9, 0x34, 0xed, 0x2d, 0x91, 0x81, 0xba, 0x43, 0x80, 0xc1, 0x24, 0x39, 0xba,
	0x8a, 0xfd, 0x62, 0x6b, 0x62, 0x4b, 0xaa, 0xf4, 0x0c, 0xb8, 0xf7, 0xb6, 0xe7, 0x1e, 0x3b, 0xd3,
	0x8f, 0xd1, 0xe9, 0x17, 0xea, 0x17, 0xe9, 0xbe, 0x7d, 0x7a, 0xb2, 0x2c, 0xff, 0xc1, 0xd3, 0x43,
	0xa7, 0x07, 0x4e, 0x1e, 0xed, 0xee, 0xdb, 0xdd, 0xdf, 0xfe, 0x7b, 0xfb, 0x0c, 0x25, 0xab, 0xce,
	0xed, 0x6b, 0x9b, 0xf7, 0x0e, 0x3c, 0xdf, 0xe5, 0xae, 0x36, 0x4b, 0x3f, 0x75, 0xb7, 0xbd, 0x09,
	0x1f, 0xac, 0x80, 0x49, 0xaa, 0xf1, 0x7b, 0x1a, 0x4a, 0xaf, 0x42, 0xc1, 0x5a, 0xc5, 0xf9, 0xe8,
	0xd6, 0x34, 0x80, 0x74, 0xa5, 0xac, 0xa7, 0x76, 0x53, 0x7b, 0x59, 0x6d, 0x11, 0x66, 0xcf, 0x3d,
	0xe6, 0x5c, 0xd9, 0x1d, 0xa6, 0xa7, 0x91, 0x92, 0xd1, 0x16, 0x20, 0x7f, 0xe4, 0x34, 0x88, 0x90,
	0x51, 0x04, 0x54, 0x70, 0xd5, 0xf3, 0x98, 0x3e, 0x43, 0x67, 0xe6, 0x60, 0x86, 0xbe, 0xb2, 0x4a,
	0xc3, 0x85, 0x6f, 0xbb, 0x3e, 0xea, 0xd7, 0x73, 0x44, 0x91, 0x07, 0xce, 0x2c, 0xd4, 0x90, 0x27,
	0xc2, 0x32, 0x14, 0x91, 0x70, 0xc9, 0x02, 0xb7, 0xeb, 0xd7, 0x99, 0x3e, 0x8b, 0xc4, 0x82, 0xf6,
	0x14, 0xf2, 0x97, 0xec, 0xc6, 0xf2, 0x1b, 0x81, 0x5e, 0xd8, 0xcd, 0xec, 0x15, 0x0f, 0xd7, 0x0e,
	0x14, 0x80, 0x03, 0xc9, 0x08, 0xdd, 0x7d, 0x01, 0x40, 0xa7, 0xa5, 0x2c, 0x90, 0xec, 0x4e, 0x5f,
	0x36, 0x02, 0x37, 0x70, 0x08, 0x4d, 0x56, 0x5b, 0xee, 0x8d, 0x42, 0x52, 0x24, 0x24, 0x25, 0xc8,
	0x55, 0x38, 0xeb, 0x20, 0xf8, 0x39, 0xd4, 0x92, 0x35, 0x5c, 0x58, 0x1d, 0x7d, 0x7a, 0x1e, 0xb2,
	0xef, 0xac, 0x76, 0x97, 0x85, 0x41, 0x8a, 0xb9, 0x9a, 0x9e, 0xe8, 0x2a, 0xc6, 0xe2, 0x75, 0xb7,
	0x77, 0x6a, 0x77, 0x6c, 0x4e, 0xc1, 0xa3, 0x58, 0x95, 0x59, 0x50, 0xa7, 0xc8, 0x15, 0x0c, 0x1b,
	0x36, 0x31, 0x0a, 0x5e, 0xad, 0x6c, 0x71, 0xab, 0x16, 0x99, 0x7e, 0xeb, 0x35, 0x2c, 0xce, 0xc8,
	0x2a, 0xd2, 0xa2, 0xd4, 0x3c, 0x83, 0x59, 0x25, 0x42, 0xa9, 0x29, 0x1e, 0xea, 0x23, 0x50, 0x47,
	0x86, 0x2f, 0x59, 0x47, 0x9e, 0x26, 0xc3, 0xc6, 0x0a, 0x68, 0x97, 0xec, 0xc7, 0x84, 0x25, 0xe3,
	0x8f, 0x14, 0x2c, 0x8f, 0xf0, 0x80, 0x22, 0x53, 0x3e, 0xb5, 0x03, 0x8e, 0xb6, 0x31, 0x32, 0xda,
	0x3e, 0xc5, 0x5c, 0x30, 0x6d, 0xa6, 0x40, 0x8f, 0xb7, 0xbe, 0x0e, 0x0b, 0x6f, 0x5c, 0xc7, 0xc4,
	0x38, 0x10, 0xf4, 0xb2, 0xd5, 0x43, 0x27, 0x32, 0x18, 0xf0, 0x03, 0x28, 0x55, 0xbb, 0x9e, 0xd7,
	0xee, 0x55, 0xed, 0xa6, 0x63, 0xba, 0xa8, 0x7e, 0x86, 0x80, 0x8c, 0x89, 0x9f, 0x61, 0x82, 0x2e,
	0x9c, 0x4e, 0x26, 0xe5, 0x92, 0xd5, 0x07, 0xab, 0x36, 0xca, 0x4f, 0x5a, 0x05, 0xf9, 0x95, 0xdf,
	0x0c, 0x08, 0x79, 0xc1, 0xf8, 0x39, 0x05, 0x1b, 0x84, 0x71, 0xa4, 0x9a, 0x58, 0x2e, 0x53, 0x13,
	0x73, 0xb9, 0x04, 0x05, 0xb3, 0xc5, 0x02, 0x5e, 0xa9, 0xbb, 0x4e, 0x68, 0x67, 0x1f, 0xe6, 0x88,
	0xa4, 0x14, 0x64, 0x26, 0x29, 0x30, 0x10, 0xfc, 0x89, 0xef, 0xde, 0xf0, 0x96, 0x69, 0x79, 0x36,
	0xb7, 0xda, 0x43, 0x8d, 0x87, 0xfe, 0x28, 0x14, 0xa2, 0x1a, 0xff, 0xcc, 0x87, 0x7e, 0x5f, 0xb4,
	0xad, 0x1e, 0xf3, 0x13, 0x19, 0x5a, 0x83, 0xd2, 0xb1, 0xed, 0x07, 0xdc, 0x6c, 0x59, 0x7e, 0x93,
	0x5d, 0x59, 0xcd, 0x50, 0x0f, 0x36, 0xdb, 0x19, 0xbb, 0x11, 0xf1, 0x95, 0x6a, 0xb4, 0x2f, 0xa1,
	0xf8, 0x9e, 0xb1, 0x4f, 0xdf, 0x5b, 0xf5, 0x4f, 0x9e, 0x2b, 0xcb, 0x70, 0x3c, 0xc8, 0x67, 0x00,
	0x98, 0x39, 0x25, 0x3b, 0x33, 0x31, 0x20, 0xab, 0x30, 0x8f, 0xb2, 0x47, 0xb7, 0x9e, 0xed, 0xf7,
	0xa8, 0xa9, 0xb2, 0xd4, 0x54, 0xe8, 0x98, 0xb0, 0x17, 0xa3, 0xe7, 0x14, 0x5d, 0xfa, 0x2a, 0x95,
	0x20, 0xf0, 0x3c, 0xf9, 0x87, 0xa5, 0x56, 0xb6, 0x1d, 0x87, 0xf9, 0x34, 0x07, 0x14, 0x80, 0x13,
	0xfb, 0x23, 0xa7, 0x39, 0x90, 0x15, 0x81, 0x2f, 0x5b, 0x76, 0xbb, 0x47, 0x24, 0x50, 0x67, 0x4e,
	0xaf, 0xe9, 0xbb, 0x48, 0xdf, 0x18, 0xbc, 0x63, 0x9f, 0xb1, 0xb2, 0x6f, 0xdd, 0x60, 0x2b, 0xa7,
	0xfa, 0x94, 0x33, 0x76, 0xcb, 0xf5, 0x79, 0xb2, 0x2f, 0xd4, 0x20, 0xbf, 0x5a, 0x77, 0x7d, 0xa6,
	0x97, 0x48, 0x48, 0x87, 0x45, 0xfa, 0x94, 0x1e, 0x55, 0x39, 0x76, 0x9d, 0xbe, 0x40, 0x0a, 0x11,
	0x5b, 0x15, 0xc7, 0x60, 0x23, 0xf2, 0x55, 0x23, 0x32, 0x62, 0xa0, 0x8a, 0x16, 0xa6, 0x05, 0xb4,
	0x40, 0x5f, 0x26, 0xfa, 0x26, 0x68, 0xb2, 0xd2, 0x85, 0x81, 0x96, 0xeb, 0x49, 0xde, 0x0a, 0xf1,
	0xb0, 0x19, 0x22, 0xde, 0x9b, 0x6e, 0xc0, 0x5f, 0x33, 0x7d, 0x95, 0xac, 0xef, 0x41, 0xee, 0xc4,
	0x14, 0xa1, 0xd4, 0xd7, 0x92, 0xfd, 0x94, 0xa8, 0x13, 0x91, 0x6b, 0x04, 0x83, 0x63, 0xf5, 0x27,
	0xf6, 0xbe, 0xc5, 0x58, 0x5b, 0x5f, 0x27, 0x0d, 0x68, 0x76, 0x90, 0x4e, 0x70, 0x75, 0x82, 0x8b,
	0x66, 0xfb, 0x74, 0x09, 0x7a, 0x83, 0x0e, 0x3d, 0x80, 0x15, 0x2a, 0x10, 0xa7, 0xd9, 0x66, 0x32,
	0x21, 0x12, 0xf8, 0x26, 0x71, 0xb1, 0x48, 0x8f, 0x51, 0xf6, 0x9a, 0xf9, 0xaa, 0x08, 0xb6, 0x26,
	0x16, 0xc1, 0x06, 0x2c, 0x85, 0xf2, 0xb1, 0x84, 0x3f, 0x20, 0x0f, 0xb6, 0x60, 0xd9, 0x74, 0x1d,
	0x6e, 0x3b, 0xdd, 0x01, 0x3b, 0x0f, 0x29, 0x2a, 0x78, 0x6e, 0x90, 0x79, 0xd6, 0xed, 0xe8, 0xdb,
	0xc4, 0x42, 0x07, 0x07, 0x59, 0xd2, 0xa0, 0xbe, 0xa3, 0x52, 0x5f, 0xed, 0x76, 0x2e, 0x70, 0xa4,
	0xec, 0x92, 0xc3, 0xdb, 0xb0, 0x86, 0x70, 0x46, 0x19, 0xfa, 0x4c, 0x69, 0x1b, 0xe2, 0x0b, 0x5b,
	0x06, 0x71, 0x77, 0x60, 0x7d, 0x88, 0x1b, 0x9a, 0x7b, 0xa4, 0x32, 0x7b, 0x6c, 0xdf, 0xb2, 0x06,
	0x76, 0x1f, 0x13, 0x4d, 0x25, 0x55, 0x3f, 0x26, 0xde, 0x0a, 0xcc, 0x1d, 0xdd, 0xd6, 0x5b, 0x96,
	0xd3, 0x64, 0xe2, 0x1a, 0xd1, 0x9f, 0x50, 0xdb, 0xfe, 0x95, 0x87, 0xad, 0x58, 0xdb, 0x86, 0xc3,
	0xfc, 0xbe, 0x71, 0xef, 0x1b, 0xf7, 0xbe, 0x71, 0xff, 0xd7, 0x8d, 0xfb, 0x05, 0x14, 0xc4, 0xb2,
	0x21, 0x4a, 0x84, 0x16, 0xa0, 0xb7, 0x01, 0xf3, 0xc3, 0xeb, 0x39, 0x23, 0x56, 0x0a, 0xd3, 0x6d,
	0xc8, 0x05, 0xa3, 0x60, 0xfc, 0x00, 0x40, 0x2d, 0x3e, 0x56, 0x96, 0x4a, 0x9c, 0x64, 0xb5, 0x22,
	0x64, 0x8e, 0x7c, 0x3f, 0x5c, 0xff, 0x62, 0xdb, 0xc6, 0xc4, 0x1e, 0x35, 0x5e, 0x62, 0x1d, 0x8b,
	0xdc, 0xab, 0x5d, 0x65, 0xea, 0x3d, 0xc5, 0xf8, 0x35, 0x05, 0xab, 0xe4, 0x9c, 0x0a, 0x4e, 0x4d,
	0x46, 0xa7, 0xa6, 0x7d, 0x8d, 0x8d, 0x3c, 0x10, 0xb0, 0x50, 0xd3, 0x9d, 0xcb, 0xf3, 0x57, 0x62,
	0xcf, 0x89, 0x45, 0x38, 0x3d, 0xd5, 0x31, 0xe3, 0x37, 0xb5, 0x78, 0x61, 0xa6, 0x86, 0xbd, 0xf9,
	0x16, 0x96, 0x86, 0x32, 0x38, 0xad, 0x43, 0x2f, 0x61, 0x41, 0x9c, 0xfd, 0x17, 0x3e, 0x55, 0xe4,
	0x46, 0x99, 0xf4, 0x86, 0x56, 0x41, 0xf5, 0x8e, 0x91, 0xf3, 0x58, 0x2e, 0x67, 0x69, 0xf5, 0x60,
	0xa9, 0x04, 0x91, 0x45, 0xca, 0xe5, 0x6c, 0x7f, 0xaf, 0x1c, 0xa9, 0xec, 0xbf, 0xdb, 0x2b, 0xab,
	0xb1, 0x39, 0x55, 0x13, 0x43, 0x6c, 0x70, 0xb1, 0x7c, 0x02, 0xd9, 0x13, 0xd7, 0xbd, 0xf3, 0xa9,
	0x82, 0x2b, 0x74, 0xec, 0x9d, 0x62, 0xfc, 0x9d, 0x82, 0x45, 0x02, 0x47, 0xc4, 0x1a, 0xe9, 0x16,
	0xae, 0x52, 0x51, 0x92, 0xab, 0xf2, 0x61, 0x80, 0xc7, 0xe4, 0x8c, 0x92, 0x77, 0xd6, 0x5e, 0x1f,
	0xb5, 0x74, 0x7a, 0xbd, 0x6f, 0x6e, 0xb0, 0x9e, 0x1f, 0x41, 0xe6, 0xdc, 0x61, 0x93, 0xf7, 0x7f,
	0x21, 0x74, 0xc5, 0x1c, 0xba, 0x9f, 0x26, 0x3e, 0xb2, 0x8e, 0xad, 0x0e, 0xde, 0x33, 0x08, 0x39,
	0x47, 0x5e, 0x3c, 0x85, 0x19, 0x11, 0x07, 0xba, 0xa7, 0x8a, 0x87, 0x1b, 0xfd, 0x73, 0x89, 0x38,
	0x19, 0xba, 0x6c, 0x79, 0x89, 0x0e, 0x1b, 0x55, 0xcc, 0x17, 0x8a, 0x9a, 0xf1, 0x21, 0xec, 0x70,
	0xc9, 0x9a, 0x3a, 0x99, 0x78, 0x67, 0x1f, 0xdd, 0x72, 0xdf, 0x1a, 0x28, 0xca, 0x71, 0x89, 0xdb,
	0x86, 0x05, 0x61, 0xbd, 0x3f, 0xed, 0x13, 0x3e, 0x94, 0xc3, 0x14, 0xc4, 0x05, 0x9e, 0x27, 0x3d,
	0xb9, 0xb3, 0xe2, 0xb7, 0x61, 0x5e, 0x58, 0x11, 0x45, 0x29, 0xc1, 0x44, 0x29, 0x93, 0x56, 0xbe,
	0x81, 0x12, 0x59, 0xe9, 0x0b, 0x4c, 0x3d, 0x6a, 0xcc, 0xf0, 0xf1, 0x98, 0xb8, 0xf5, 0xf6, 0x21,
	0x2b, 0xf8, 0xea, 0xf4, 0xc3, 0x71, 0xd7, 0xa3, 0x54, 0xd2, 0x82, 0xe5, 0x11, 0x64, 0x91, 0xd5,
	0x13, 0x53, 0x64, 0x29, 0xfe, 0xc8, 0x13, 0x8f, 0xe9, 0xeb, 0xb0, 0x49, 0x9e, 0x27, 0x4b, 0xed,
	0xce, 0x48, 0x9c, 0x8b, 0xde, 0x47, 0x77, 0xd5, 0xec, 0xaf, 0x89, 0xe1, 0x2f, 0x5f, 0xbe, 0xda,
	0x8b, 0xfe, 0x95, 0x20, 0x08, 0xc3, 0xae, 0x8f, 0x38, 0x64, 0xfc, 0x82, 0xaf, 0xe7, 0x51, 0xca,
	0xb0, 0xff, 0xa2, 0xfb, 0x45, 0x79, 0xff, 0x58, 0x5c, 0x20, 0x01, 0xbf, 0xa3, 0x0b, 0x3f, 0x87,
	0x5c, 0x58, 0x3a, 0x93, 0xd7, 0xbd, 0xa8, 0x5b, 0xe9, 0x1f, 0x18, 0x23, 0x80, 0x6d, 0x42, 0x16,
	0x2e, 0x9b, 0x72, 0xf3, 0x14, 0x75, 0x73, 0x6d, 0xb7, 0x59, 0x93, 0x05, 0x34, 0xdb, 0xaa, 0x9c,
	0x79, 0xa1, 0x33, 0x38, 0xcf, 0xde, 0xd9, 0x1c, 0xa3, 0x29, 0xf7, 0x1d, 0x19, 0x50, 0xbc, 0x15,
	0x45, 0xfe, 0xbf, 0xb3, 0x9b, 0x2d, 0xb1, 0x9c, 0x84, 0x37, 0x16, 0xae, 0x5a, 0x31, 0xd1, 0x98,
	0xd1, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x6e, 0x86, 0x26, 0xa0, 0x70, 0x12, 0x00, 0x00,
}
