// Code generated by protoc-gen-go.
// source: arena.proto
// DO NOT EDIT!

package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 竞技场排行
type Arena_Rank_Info_ struct {
	UserID           *int64  `protobuf:"varint,1,opt,name=UserID" json:"UserID,omitempty"`
	RankNo           *int32  `protobuf:"varint,2,opt,name=RankNo" json:"RankNo,omitempty"`
	Name             *string `protobuf:"bytes,3,opt,name=Name" json:"Name,omitempty"`
	Score            *int32  `protobuf:"varint,4,opt,name=Score" json:"Score,omitempty"`
	Country          *int32  `protobuf:"varint,5,opt,name=Country" json:"Country,omitempty"`
	MaxChapter       *int32  `protobuf:"varint,6,opt,name=MaxChapter" json:"MaxChapter,omitempty"`
	Formation        []int32 `protobuf:"varint,7,rep,name=Formation" json:"Formation,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Arena_Rank_Info_) Reset()                    { *m = Arena_Rank_Info_{} }
func (m *Arena_Rank_Info_) String() string            { return proto.CompactTextString(m) }
func (*Arena_Rank_Info_) ProtoMessage()               {}
func (*Arena_Rank_Info_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Arena_Rank_Info_) GetUserID() int64 {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return 0
}

func (m *Arena_Rank_Info_) GetRankNo() int32 {
	if m != nil && m.RankNo != nil {
		return *m.RankNo
	}
	return 0
}

func (m *Arena_Rank_Info_) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Arena_Rank_Info_) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *Arena_Rank_Info_) GetCountry() int32 {
	if m != nil && m.Country != nil {
		return *m.Country
	}
	return 0
}

func (m *Arena_Rank_Info_) GetMaxChapter() int32 {
	if m != nil && m.MaxChapter != nil {
		return *m.MaxChapter
	}
	return 0
}

func (m *Arena_Rank_Info_) GetFormation() []int32 {
	if m != nil {
		return m.Formation
	}
	return nil
}

type Arena_Monster_Info_ struct {
	FamilyID         *int32  `protobuf:"varint,1,opt,name=FamilyID" json:"FamilyID,omitempty"`
	SkillLv          []int32 `protobuf:"varint,2,rep,name=SkillLv" json:"SkillLv,omitempty"`
	TalentLv         []int32 `protobuf:"varint,3,rep,name=TalentLv" json:"TalentLv,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Arena_Monster_Info_) Reset()                    { *m = Arena_Monster_Info_{} }
func (m *Arena_Monster_Info_) String() string            { return proto.CompactTextString(m) }
func (*Arena_Monster_Info_) ProtoMessage()               {}
func (*Arena_Monster_Info_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Arena_Monster_Info_) GetFamilyID() int32 {
	if m != nil && m.FamilyID != nil {
		return *m.FamilyID
	}
	return 0
}

func (m *Arena_Monster_Info_) GetSkillLv() []int32 {
	if m != nil {
		return m.SkillLv
	}
	return nil
}

func (m *Arena_Monster_Info_) GetTalentLv() []int32 {
	if m != nil {
		return m.TalentLv
	}
	return nil
}

type Arena_Battle_MonsterInfo_ struct {
	ID               *int32  `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	Lv               *int32  `protobuf:"varint,2,opt,name=Lv" json:"Lv,omitempty"`
	Hp               *int32  `protobuf:"varint,3,opt,name=Hp" json:"Hp,omitempty"`
	PosX             *int32  `protobuf:"varint,4,opt,name=PosX" json:"PosX,omitempty"`
	PosY             *int32  `protobuf:"varint,5,opt,name=PosY" json:"PosY,omitempty"`
	SkillLv          []int32 `protobuf:"varint,6,rep,name=SkillLv" json:"SkillLv,omitempty"`
	TalentLv         []int32 `protobuf:"varint,7,rep,name=TalentLv" json:"TalentLv,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Arena_Battle_MonsterInfo_) Reset()                    { *m = Arena_Battle_MonsterInfo_{} }
func (m *Arena_Battle_MonsterInfo_) String() string            { return proto.CompactTextString(m) }
func (*Arena_Battle_MonsterInfo_) ProtoMessage()               {}
func (*Arena_Battle_MonsterInfo_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *Arena_Battle_MonsterInfo_) GetID() int32 {
	if m != nil && m.ID != nil {
		return *m.ID
	}
	return 0
}

func (m *Arena_Battle_MonsterInfo_) GetLv() int32 {
	if m != nil && m.Lv != nil {
		return *m.Lv
	}
	return 0
}

func (m *Arena_Battle_MonsterInfo_) GetHp() int32 {
	if m != nil && m.Hp != nil {
		return *m.Hp
	}
	return 0
}

func (m *Arena_Battle_MonsterInfo_) GetPosX() int32 {
	if m != nil && m.PosX != nil {
		return *m.PosX
	}
	return 0
}

func (m *Arena_Battle_MonsterInfo_) GetPosY() int32 {
	if m != nil && m.PosY != nil {
		return *m.PosY
	}
	return 0
}

func (m *Arena_Battle_MonsterInfo_) GetSkillLv() []int32 {
	if m != nil {
		return m.SkillLv
	}
	return nil
}

func (m *Arena_Battle_MonsterInfo_) GetTalentLv() []int32 {
	if m != nil {
		return m.TalentLv
	}
	return nil
}

type Arena_Player_Info struct {
	Uid              *int64                 `protobuf:"varint,1,opt,name=Uid" json:"Uid,omitempty"`
	Name             *string                `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Score            *int32                 `protobuf:"varint,3,opt,name=Score" json:"Score,omitempty"`
	Div              *int32                 `protobuf:"varint,4,opt,name=Div" json:"Div,omitempty"`
	Role             *Role_Info_            `protobuf:"bytes,5,opt,name=Role" json:"Role,omitempty"`
	Formation        []*Arena_Monster_Info_ `protobuf:"bytes,6,rep,name=Formation" json:"Formation,omitempty"`
	Country          *int32                 `protobuf:"varint,7,opt,name=Country" json:"Country,omitempty"`
	Streak           *int32                 `protobuf:"varint,8,opt,name=Streak" json:"Streak,omitempty"`
	IconID           *int32                 `protobuf:"varint,9,opt,name=IconID" json:"IconID,omitempty"`
	IconUrl          *string                `protobuf:"bytes,10,opt,name=IconUrl" json:"IconUrl,omitempty"`
	Gold             *int32                 `protobuf:"varint,11,opt,name=Gold" json:"Gold,omitempty"`
	MaxChapter       *int32                 `protobuf:"varint,12,opt,name=MaxChapter" json:"MaxChapter,omitempty"`
	RegTime          *int64                 `protobuf:"varint,13,opt,name=RegTime" json:"RegTime,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *Arena_Player_Info) Reset()                    { *m = Arena_Player_Info{} }
func (m *Arena_Player_Info) String() string            { return proto.CompactTextString(m) }
func (*Arena_Player_Info) ProtoMessage()               {}
func (*Arena_Player_Info) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *Arena_Player_Info) GetUid() int64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *Arena_Player_Info) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Arena_Player_Info) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *Arena_Player_Info) GetDiv() int32 {
	if m != nil && m.Div != nil {
		return *m.Div
	}
	return 0
}

func (m *Arena_Player_Info) GetRole() *Role_Info_ {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *Arena_Player_Info) GetFormation() []*Arena_Monster_Info_ {
	if m != nil {
		return m.Formation
	}
	return nil
}

func (m *Arena_Player_Info) GetCountry() int32 {
	if m != nil && m.Country != nil {
		return *m.Country
	}
	return 0
}

func (m *Arena_Player_Info) GetStreak() int32 {
	if m != nil && m.Streak != nil {
		return *m.Streak
	}
	return 0
}

func (m *Arena_Player_Info) GetIconID() int32 {
	if m != nil && m.IconID != nil {
		return *m.IconID
	}
	return 0
}

func (m *Arena_Player_Info) GetIconUrl() string {
	if m != nil && m.IconUrl != nil {
		return *m.IconUrl
	}
	return ""
}

func (m *Arena_Player_Info) GetGold() int32 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

func (m *Arena_Player_Info) GetMaxChapter() int32 {
	if m != nil && m.MaxChapter != nil {
		return *m.MaxChapter
	}
	return 0
}

func (m *Arena_Player_Info) GetRegTime() int64 {
	if m != nil && m.RegTime != nil {
		return *m.RegTime
	}
	return 0
}

// 请求 排行榜
type Req_Arena_Rank_ struct {
	UserID           *int64  `protobuf:"varint,1,opt,name=UserID" json:"UserID,omitempty"`
	BeginRank        *int32  `protobuf:"varint,2,opt,name=BeginRank" json:"BeginRank,omitempty"`
	Type             *int32  `protobuf:"varint,3,opt,name=Type" json:"Type,omitempty"`
	FriendIDs        []int64 `protobuf:"varint,4,rep,name=FriendIDs" json:"FriendIDs,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Req_Arena_Rank_) Reset()                    { *m = Req_Arena_Rank_{} }
func (m *Req_Arena_Rank_) String() string            { return proto.CompactTextString(m) }
func (*Req_Arena_Rank_) ProtoMessage()               {}
func (*Req_Arena_Rank_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *Req_Arena_Rank_) GetUserID() int64 {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return 0
}

func (m *Req_Arena_Rank_) GetBeginRank() int32 {
	if m != nil && m.BeginRank != nil {
		return *m.BeginRank
	}
	return 0
}

func (m *Req_Arena_Rank_) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *Req_Arena_Rank_) GetFriendIDs() []int64 {
	if m != nil {
		return m.FriendIDs
	}
	return nil
}

// 响应 排行榜
type Resp_Arena_Rank_ struct {
	UserID           *int64              `protobuf:"varint,1,opt,name=UserID" json:"UserID,omitempty"`
	Rank             []*Arena_Rank_Info_ `protobuf:"bytes,2,rep,name=Rank" json:"Rank,omitempty"`
	Type             *int32              `protobuf:"varint,3,opt,name=Type" json:"Type,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *Resp_Arena_Rank_) Reset()                    { *m = Resp_Arena_Rank_{} }
func (m *Resp_Arena_Rank_) String() string            { return proto.CompactTextString(m) }
func (*Resp_Arena_Rank_) ProtoMessage()               {}
func (*Resp_Arena_Rank_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *Resp_Arena_Rank_) GetUserID() int64 {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return 0
}

func (m *Resp_Arena_Rank_) GetRank() []*Arena_Rank_Info_ {
	if m != nil {
		return m.Rank
	}
	return nil
}

func (m *Resp_Arena_Rank_) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

type Req_Arena_OpenTime_ struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *Req_Arena_OpenTime_) Reset()                    { *m = Req_Arena_OpenTime_{} }
func (m *Req_Arena_OpenTime_) String() string            { return proto.CompactTextString(m) }
func (*Req_Arena_OpenTime_) ProtoMessage()               {}
func (*Req_Arena_OpenTime_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

type Resp_Arena_OpenTime_ struct {
	OpenTime         *int64 `protobuf:"varint,1,opt,name=OpenTime" json:"OpenTime,omitempty"`
	CloseTime        *int64 `protobuf:"varint,2,opt,name=CloseTime" json:"CloseTime,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Resp_Arena_OpenTime_) Reset()                    { *m = Resp_Arena_OpenTime_{} }
func (m *Resp_Arena_OpenTime_) String() string            { return proto.CompactTextString(m) }
func (*Resp_Arena_OpenTime_) ProtoMessage()               {}
func (*Resp_Arena_OpenTime_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *Resp_Arena_OpenTime_) GetOpenTime() int64 {
	if m != nil && m.OpenTime != nil {
		return *m.OpenTime
	}
	return 0
}

func (m *Resp_Arena_OpenTime_) GetCloseTime() int64 {
	if m != nil && m.CloseTime != nil {
		return *m.CloseTime
	}
	return 0
}

// 请求竞技场信息
type Req_Arena_Info_ struct {
	UserID           *int64 `protobuf:"varint,1,opt,name=UserID" json:"UserID,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Req_Arena_Info_) Reset()                    { *m = Req_Arena_Info_{} }
func (m *Req_Arena_Info_) String() string            { return proto.CompactTextString(m) }
func (*Req_Arena_Info_) ProtoMessage()               {}
func (*Req_Arena_Info_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *Req_Arena_Info_) GetUserID() int64 {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return 0
}

// 响应竞技场信息
type Resp_Arena_Info_ struct {
	ArenaScore       *int32           `protobuf:"varint,1,opt,name=ArenaScore" json:"ArenaScore,omitempty"`
	EndTime          *int64           `protobuf:"varint,2,opt,name=EndTime" json:"EndTime,omitempty"`
	ArenaRewards     []*Arena_Reward_ `protobuf:"bytes,3,rep,name=ArenaRewards" json:"ArenaRewards,omitempty"`
	UserID           *int64           `protobuf:"varint,4,opt,name=UserID" json:"UserID,omitempty"`
	SeasonID         *int32           `protobuf:"varint,5,opt,name=SeasonID" json:"SeasonID,omitempty"`
	Rank             *int32           `protobuf:"varint,6,opt,name=Rank" json:"Rank,omitempty"`
	GameNum          *int32           `protobuf:"varint,7,opt,name=GameNum" json:"GameNum,omitempty"`
	GameWin          *int32           `protobuf:"varint,8,opt,name=GameWin" json:"GameWin,omitempty"`
	ChestIcon        *int32           `protobuf:"varint,9,opt,name=ChestIcon" json:"ChestIcon,omitempty"`
	ChestRewards     []*Reward_Info_  `protobuf:"bytes,10,rep,name=ChestRewards" json:"ChestRewards,omitempty"`
	Rewards          []*Reward_Info_  `protobuf:"bytes,11,rep,name=Rewards" json:"Rewards,omitempty"`
	OpenTime         *int64           `protobuf:"varint,12,opt,name=OpenTime" json:"OpenTime,omitempty"`
	CloseTime        *int64           `protobuf:"varint,13,opt,name=CloseTime" json:"CloseTime,omitempty"`
	Honor            *int32           `protobuf:"varint,14,opt,name=Honor" json:"Honor,omitempty"`
	DailyHonor       *int32           `protobuf:"varint,15,opt,name=DailyHonor" json:"DailyHonor,omitempty"`
	DailyHonorMax    *int32           `protobuf:"varint,16,opt,name=DailyHonorMax" json:"DailyHonorMax,omitempty"`
	NextRefreshTime  *int64           `protobuf:"varint,17,opt,name=NextRefreshTime" json:"NextRefreshTime,omitempty"`
	BoxIcon          *int32           `protobuf:"varint,18,opt,name=BoxIcon" json:"BoxIcon,omitempty"`
	MaxStar          *int32           `protobuf:"varint,19,opt,name=MaxStar" json:"MaxStar,omitempty"`
	Star             *int32           `protobuf:"varint,20,opt,name=Star" json:"Star,omitempty"`
	OldScore         *int32           `protobuf:"varint,21,opt,name=OldScore" json:"OldScore,omitempty"`
	Vit              *int32           `protobuf:"varint,22,opt,name=Vit" json:"Vit,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *Resp_Arena_Info_) Reset()                    { *m = Resp_Arena_Info_{} }
func (m *Resp_Arena_Info_) String() string            { return proto.CompactTextString(m) }
func (*Resp_Arena_Info_) ProtoMessage()               {}
func (*Resp_Arena_Info_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *Resp_Arena_Info_) GetArenaScore() int32 {
	if m != nil && m.ArenaScore != nil {
		return *m.ArenaScore
	}
	return 0
}

func (m *Resp_Arena_Info_) GetEndTime() int64 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *Resp_Arena_Info_) GetArenaRewards() []*Arena_Reward_ {
	if m != nil {
		return m.ArenaRewards
	}
	return nil
}

func (m *Resp_Arena_Info_) GetUserID() int64 {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return 0
}

func (m *Resp_Arena_Info_) GetSeasonID() int32 {
	if m != nil && m.SeasonID != nil {
		return *m.SeasonID
	}
	return 0
}

func (m *Resp_Arena_Info_) GetRank() int32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *Resp_Arena_Info_) GetGameNum() int32 {
	if m != nil && m.GameNum != nil {
		return *m.GameNum
	}
	return 0
}

func (m *Resp_Arena_Info_) GetGameWin() int32 {
	if m != nil && m.GameWin != nil {
		return *m.GameWin
	}
	return 0
}

func (m *Resp_Arena_Info_) GetChestIcon() int32 {
	if m != nil && m.ChestIcon != nil {
		return *m.ChestIcon
	}
	return 0
}

func (m *Resp_Arena_Info_) GetChestRewards() []*Reward_Info_ {
	if m != nil {
		return m.ChestRewards
	}
	return nil
}

func (m *Resp_Arena_Info_) GetRewards() []*Reward_Info_ {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func (m *Resp_Arena_Info_) GetOpenTime() int64 {
	if m != nil && m.OpenTime != nil {
		return *m.OpenTime
	}
	return 0
}

func (m *Resp_Arena_Info_) GetCloseTime() int64 {
	if m != nil && m.CloseTime != nil {
		return *m.CloseTime
	}
	return 0
}

func (m *Resp_Arena_Info_) GetHonor() int32 {
	if m != nil && m.Honor != nil {
		return *m.Honor
	}
	return 0
}

func (m *Resp_Arena_Info_) GetDailyHonor() int32 {
	if m != nil && m.DailyHonor != nil {
		return *m.DailyHonor
	}
	return 0
}

func (m *Resp_Arena_Info_) GetDailyHonorMax() int32 {
	if m != nil && m.DailyHonorMax != nil {
		return *m.DailyHonorMax
	}
	return 0
}

func (m *Resp_Arena_Info_) GetNextRefreshTime() int64 {
	if m != nil && m.NextRefreshTime != nil {
		return *m.NextRefreshTime
	}
	return 0
}

func (m *Resp_Arena_Info_) GetBoxIcon() int32 {
	if m != nil && m.BoxIcon != nil {
		return *m.BoxIcon
	}
	return 0
}

func (m *Resp_Arena_Info_) GetMaxStar() int32 {
	if m != nil && m.MaxStar != nil {
		return *m.MaxStar
	}
	return 0
}

func (m *Resp_Arena_Info_) GetStar() int32 {
	if m != nil && m.Star != nil {
		return *m.Star
	}
	return 0
}

func (m *Resp_Arena_Info_) GetOldScore() int32 {
	if m != nil && m.OldScore != nil {
		return *m.OldScore
	}
	return 0
}

func (m *Resp_Arena_Info_) GetVit() int32 {
	if m != nil && m.Vit != nil {
		return *m.Vit
	}
	return 0
}

// 请求 竞技场荣耀商店
type Req_Honor_Shop_ struct {
	UserID           *int64 `protobuf:"varint,1,opt,name=UserID" json:"UserID,omitempty"`
	LastScore        *int32 `protobuf:"varint,2,opt,name=LastScore" json:"LastScore,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Req_Honor_Shop_) Reset()                    { *m = Req_Honor_Shop_{} }
func (m *Req_Honor_Shop_) String() string            { return proto.CompactTextString(m) }
func (*Req_Honor_Shop_) ProtoMessage()               {}
func (*Req_Honor_Shop_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *Req_Honor_Shop_) GetUserID() int64 {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return 0
}

func (m *Req_Honor_Shop_) GetLastScore() int32 {
	if m != nil && m.LastScore != nil {
		return *m.LastScore
	}
	return 0
}

// 响应 荣耀商店
type Resp_Honor_Shop_ struct {
	UserID           *int64          `protobuf:"varint,1,opt,name=UserID" json:"UserID,omitempty"`
	Items            []*Reward_Info_ `protobuf:"bytes,2,rep,name=Items" json:"Items,omitempty"`
	Price            []int32         `protobuf:"varint,3,rep,name=Price" json:"Price,omitempty"`
	BuyTimes         []int32         `protobuf:"varint,4,rep,name=BuyTimes" json:"BuyTimes,omitempty"`
	Limit            []int32         `protobuf:"varint,5,rep,name=Limit" json:"Limit,omitempty"`
	ItemID           []int32         `protobuf:"varint,6,rep,name=ItemID" json:"ItemID,omitempty"`
	NextRefreshTime  *int64          `protobuf:"varint,7,opt,name=NextRefreshTime" json:"NextRefreshTime,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Resp_Honor_Shop_) Reset()                    { *m = Resp_Honor_Shop_{} }
func (m *Resp_Honor_Shop_) String() string            { return proto.CompactTextString(m) }
func (*Resp_Honor_Shop_) ProtoMessage()               {}
func (*Resp_Honor_Shop_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

func (m *Resp_Honor_Shop_) GetUserID() int64 {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return 0
}

func (m *Resp_Honor_Shop_) GetItems() []*Reward_Info_ {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Resp_Honor_Shop_) GetPrice() []int32 {
	if m != nil {
		return m.Price
	}
	return nil
}

func (m *Resp_Honor_Shop_) GetBuyTimes() []int32 {
	if m != nil {
		return m.BuyTimes
	}
	return nil
}

func (m *Resp_Honor_Shop_) GetLimit() []int32 {
	if m != nil {
		return m.Limit
	}
	return nil
}

func (m *Resp_Honor_Shop_) GetItemID() []int32 {
	if m != nil {
		return m.ItemID
	}
	return nil
}

func (m *Resp_Honor_Shop_) GetNextRefreshTime() int64 {
	if m != nil && m.NextRefreshTime != nil {
		return *m.NextRefreshTime
	}
	return 0
}

// 请求 荣耀商店购买
type Req_Honor_Buy_ struct {
	ItemID           *int32 `protobuf:"varint,1,opt,name=ItemID" json:"ItemID,omitempty"`
	ItemType         *int32 `protobuf:"varint,2,opt,name=ItemType" json:"ItemType,omitempty"`
	BaseID           *int32 `protobuf:"varint,3,opt,name=BaseID" json:"BaseID,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Req_Honor_Buy_) Reset()                    { *m = Req_Honor_Buy_{} }
func (m *Req_Honor_Buy_) String() string            { return proto.CompactTextString(m) }
func (*Req_Honor_Buy_) ProtoMessage()               {}
func (*Req_Honor_Buy_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

func (m *Req_Honor_Buy_) GetItemID() int32 {
	if m != nil && m.ItemID != nil {
		return *m.ItemID
	}
	return 0
}

func (m *Req_Honor_Buy_) GetItemType() int32 {
	if m != nil && m.ItemType != nil {
		return *m.ItemType
	}
	return 0
}

func (m *Req_Honor_Buy_) GetBaseID() int32 {
	if m != nil && m.BaseID != nil {
		return *m.BaseID
	}
	return 0
}

// 响应 荣耀商店购买
type Resp_Honor_Buy_ struct {
	Rewards          []*Reward_Info_ `protobuf:"bytes,1,rep,name=Rewards" json:"Rewards,omitempty"`
	BuyTimes         *int32          `protobuf:"varint,2,opt,name=BuyTimes" json:"BuyTimes,omitempty"`
	ItemID           *int32          `protobuf:"varint,3,opt,name=ItemID" json:"ItemID,omitempty"`
	Honor            *int32          `protobuf:"varint,4,opt,name=Honor" json:"Honor,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Resp_Honor_Buy_) Reset()                    { *m = Resp_Honor_Buy_{} }
func (m *Resp_Honor_Buy_) String() string            { return proto.CompactTextString(m) }
func (*Resp_Honor_Buy_) ProtoMessage()               {}
func (*Resp_Honor_Buy_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{13} }

func (m *Resp_Honor_Buy_) GetRewards() []*Reward_Info_ {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func (m *Resp_Honor_Buy_) GetBuyTimes() int32 {
	if m != nil && m.BuyTimes != nil {
		return *m.BuyTimes
	}
	return 0
}

func (m *Resp_Honor_Buy_) GetItemID() int32 {
	if m != nil && m.ItemID != nil {
		return *m.ItemID
	}
	return 0
}

func (m *Resp_Honor_Buy_) GetHonor() int32 {
	if m != nil && m.Honor != nil {
		return *m.Honor
	}
	return 0
}

// 竞技场奖励
type Arena_Reward_ struct {
	Score            *int32          `protobuf:"varint,1,opt,name=Score" json:"Score,omitempty"`
	DivName          *int32          `protobuf:"varint,2,opt,name=DivName" json:"DivName,omitempty"`
	DicIcon          *string         `protobuf:"bytes,3,opt,name=DicIcon" json:"DicIcon,omitempty"`
	Rewards          []*Reward_Info_ `protobuf:"bytes,4,rep,name=Rewards" json:"Rewards,omitempty"`
	Segment          *int32          `protobuf:"varint,5,opt,name=Segment" json:"Segment,omitempty"`
	StarNum          *int32          `protobuf:"varint,6,opt,name=StarNum" json:"StarNum,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Arena_Reward_) Reset()                    { *m = Arena_Reward_{} }
func (m *Arena_Reward_) String() string            { return proto.CompactTextString(m) }
func (*Arena_Reward_) ProtoMessage()               {}
func (*Arena_Reward_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{14} }

func (m *Arena_Reward_) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *Arena_Reward_) GetDivName() int32 {
	if m != nil && m.DivName != nil {
		return *m.DivName
	}
	return 0
}

func (m *Arena_Reward_) GetDicIcon() string {
	if m != nil && m.DicIcon != nil {
		return *m.DicIcon
	}
	return ""
}

func (m *Arena_Reward_) GetRewards() []*Reward_Info_ {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func (m *Arena_Reward_) GetSegment() int32 {
	if m != nil && m.Segment != nil {
		return *m.Segment
	}
	return 0
}

func (m *Arena_Reward_) GetStarNum() int32 {
	if m != nil && m.StarNum != nil {
		return *m.StarNum
	}
	return 0
}

// 请求竞技场匹配
type Req_Arena_Match_ struct {
	OpType           *int32             `protobuf:"varint,1,opt,name=OpType" json:"OpType,omitempty"`
	UserID           *int64             `protobuf:"varint,2,opt,name=UserID" json:"UserID,omitempty"`
	PlayerInfo       *Arena_Player_Info `protobuf:"bytes,3,opt,name=PlayerInfo" json:"PlayerInfo,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *Req_Arena_Match_) Reset()                    { *m = Req_Arena_Match_{} }
func (m *Req_Arena_Match_) String() string            { return proto.CompactTextString(m) }
func (*Req_Arena_Match_) ProtoMessage()               {}
func (*Req_Arena_Match_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{15} }

func (m *Req_Arena_Match_) GetOpType() int32 {
	if m != nil && m.OpType != nil {
		return *m.OpType
	}
	return 0
}

func (m *Req_Arena_Match_) GetUserID() int64 {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return 0
}

func (m *Req_Arena_Match_) GetPlayerInfo() *Arena_Player_Info {
	if m != nil {
		return m.PlayerInfo
	}
	return nil
}

// 响应竞技场匹配( 只有两边都匹配成功的时候才会 下发 )
type Resp_Arena_Match_ struct {
	RoomID           *int32             `protobuf:"varint,1,opt,name=RoomID" json:"RoomID,omitempty"`
	RoundNum         *int32             `protobuf:"varint,2,opt,name=RoundNum" json:"RoundNum,omitempty"`
	PlayerRed        *Arena_Player_Info `protobuf:"bytes,3,opt,name=PlayerRed" json:"PlayerRed,omitempty"`
	PlayerBlud       *Arena_Player_Info `protobuf:"bytes,4,opt,name=PlayerBlud" json:"PlayerBlud,omitempty"`
	HeroIDs          []int32            `protobuf:"varint,5,rep,name=HeroIDs" json:"HeroIDs,omitempty"`
	UserID           *int64             `protobuf:"varint,6,opt,name=UserID" json:"UserID,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *Resp_Arena_Match_) Reset()                    { *m = Resp_Arena_Match_{} }
func (m *Resp_Arena_Match_) String() string            { return proto.CompactTextString(m) }
func (*Resp_Arena_Match_) ProtoMessage()               {}
func (*Resp_Arena_Match_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{16} }

func (m *Resp_Arena_Match_) GetRoomID() int32 {
	if m != nil && m.RoomID != nil {
		return *m.RoomID
	}
	return 0
}

func (m *Resp_Arena_Match_) GetRoundNum() int32 {
	if m != nil && m.RoundNum != nil {
		return *m.RoundNum
	}
	return 0
}

func (m *Resp_Arena_Match_) GetPlayerRed() *Arena_Player_Info {
	if m != nil {
		return m.PlayerRed
	}
	return nil
}

func (m *Resp_Arena_Match_) GetPlayerBlud() *Arena_Player_Info {
	if m != nil {
		return m.PlayerBlud
	}
	return nil
}

func (m *Resp_Arena_Match_) GetHeroIDs() []int32 {
	if m != nil {
		return m.HeroIDs
	}
	return nil
}

func (m *Resp_Arena_Match_) GetUserID() int64 {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return 0
}

// 请求战斗开始( 加载进度条 结束以后发送 )
type Req_Arena_Start_ struct {
	UserID           *int64 `protobuf:"varint,1,opt,name=UserID" json:"UserID,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Req_Arena_Start_) Reset()                    { *m = Req_Arena_Start_{} }
func (m *Req_Arena_Start_) String() string            { return proto.CompactTextString(m) }
func (*Req_Arena_Start_) ProtoMessage()               {}
func (*Req_Arena_Start_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{17} }

func (m *Req_Arena_Start_) GetUserID() int64 {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return 0
}

// 响应战斗开始
type Resp_Arena_Start_ struct {
	Step             *int32      `protobuf:"varint,1,opt,name=Step" json:"Step,omitempty"`
	EndTime          *int64      `protobuf:"varint,2,opt,name=EndTime" json:"EndTime,omitempty"`
	TableInfo        *TableInfo_ `protobuf:"bytes,3,opt,name=TableInfo" json:"TableInfo,omitempty"`
	UserID           *int64      `protobuf:"varint,4,opt,name=UserID" json:"UserID,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *Resp_Arena_Start_) Reset()                    { *m = Resp_Arena_Start_{} }
func (m *Resp_Arena_Start_) String() string            { return proto.CompactTextString(m) }
func (*Resp_Arena_Start_) ProtoMessage()               {}
func (*Resp_Arena_Start_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{18} }

func (m *Resp_Arena_Start_) GetStep() int32 {
	if m != nil && m.Step != nil {
		return *m.Step
	}
	return 0
}

func (m *Resp_Arena_Start_) GetEndTime() int64 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *Resp_Arena_Start_) GetTableInfo() *TableInfo_ {
	if m != nil {
		return m.TableInfo
	}
	return nil
}

func (m *Resp_Arena_Start_) GetUserID() int64 {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return 0
}

// 请求 战斗中消除（生成怪）
type Req_Arena_GenMonster_ struct {
	UserID           *int64                       `protobuf:"varint,1,opt,name=UserID" json:"UserID,omitempty"`
	Step             *int32                       `protobuf:"varint,2,opt,name=Step" json:"Step,omitempty"`
	HeroInfos        []*Arena_Battle_MonsterInfo_ `protobuf:"bytes,3,rep,name=HeroInfos" json:"HeroInfos,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *Req_Arena_GenMonster_) Reset()                    { *m = Req_Arena_GenMonster_{} }
func (m *Req_Arena_GenMonster_) String() string            { return proto.CompactTextString(m) }
func (*Req_Arena_GenMonster_) ProtoMessage()               {}
func (*Req_Arena_GenMonster_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{19} }

func (m *Req_Arena_GenMonster_) GetUserID() int64 {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return 0
}

func (m *Req_Arena_GenMonster_) GetStep() int32 {
	if m != nil && m.Step != nil {
		return *m.Step
	}
	return 0
}

func (m *Req_Arena_GenMonster_) GetHeroInfos() []*Arena_Battle_MonsterInfo_ {
	if m != nil {
		return m.HeroInfos
	}
	return nil
}

// 转发 战斗中消除(真人玩家使用)
type Resp_Arena_GenMonster_ struct {
	UserID           *int64                       `protobuf:"varint,1,opt,name=UserID" json:"UserID,omitempty"`
	Step             *int32                       `protobuf:"varint,2,opt,name=Step" json:"Step,omitempty"`
	HeroInfos        []*Arena_Battle_MonsterInfo_ `protobuf:"bytes,3,rep,name=HeroInfos" json:"HeroInfos,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *Resp_Arena_GenMonster_) Reset()                    { *m = Resp_Arena_GenMonster_{} }
func (m *Resp_Arena_GenMonster_) String() string            { return proto.CompactTextString(m) }
func (*Resp_Arena_GenMonster_) ProtoMessage()               {}
func (*Resp_Arena_GenMonster_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{20} }

func (m *Resp_Arena_GenMonster_) GetUserID() int64 {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return 0
}

func (m *Resp_Arena_GenMonster_) GetStep() int32 {
	if m != nil && m.Step != nil {
		return *m.Step
	}
	return 0
}

func (m *Resp_Arena_GenMonster_) GetHeroInfos() []*Arena_Battle_MonsterInfo_ {
	if m != nil {
		return m.HeroInfos
	}
	return nil
}

// 转发 战斗中消除(机器人使用)
type Fw_Arena_GenMonster_ struct {
	UserID           *int64             `protobuf:"varint,1,opt,name=UserID" json:"UserID,omitempty"`
	Step             *int32             `protobuf:"varint,2,opt,name=Step" json:"Step,omitempty"`
	HeroInfos        []*BattleHeroInfo_ `protobuf:"bytes,3,rep,name=HeroInfos" json:"HeroInfos,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *Fw_Arena_GenMonster_) Reset()                    { *m = Fw_Arena_GenMonster_{} }
func (m *Fw_Arena_GenMonster_) String() string            { return proto.CompactTextString(m) }
func (*Fw_Arena_GenMonster_) ProtoMessage()               {}
func (*Fw_Arena_GenMonster_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{21} }

func (m *Fw_Arena_GenMonster_) GetUserID() int64 {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return 0
}

func (m *Fw_Arena_GenMonster_) GetStep() int32 {
	if m != nil && m.Step != nil {
		return *m.Step
	}
	return 0
}

func (m *Fw_Arena_GenMonster_) GetHeroInfos() []*BattleHeroInfo_ {
	if m != nil {
		return m.HeroInfos
	}
	return nil
}

// 请求回合结束（消除结束，准备开始战斗）
type Req_Arena_Round_ struct {
	TableInfo        *TableInfo_                  `protobuf:"bytes,1,opt,name=TableInfo" json:"TableInfo,omitempty"`
	HeroSelf         []*Arena_Battle_MonsterInfo_ `protobuf:"bytes,2,rep,name=HeroSelf" json:"HeroSelf,omitempty"`
	HeroRobot        []*Arena_Battle_MonsterInfo_ `protobuf:"bytes,3,rep,name=HeroRobot" json:"HeroRobot,omitempty"`
	UserID           *int64                       `protobuf:"varint,4,opt,name=UserID" json:"UserID,omitempty"`
	Power            *int32                       `protobuf:"varint,5,opt,name=Power" json:"Power,omitempty"`
	Victory          *int32                       `protobuf:"varint,6,opt,name=Victory" json:"Victory,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *Req_Arena_Round_) Reset()                    { *m = Req_Arena_Round_{} }
func (m *Req_Arena_Round_) String() string            { return proto.CompactTextString(m) }
func (*Req_Arena_Round_) ProtoMessage()               {}
func (*Req_Arena_Round_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{22} }

func (m *Req_Arena_Round_) GetTableInfo() *TableInfo_ {
	if m != nil {
		return m.TableInfo
	}
	return nil
}

func (m *Req_Arena_Round_) GetHeroSelf() []*Arena_Battle_MonsterInfo_ {
	if m != nil {
		return m.HeroSelf
	}
	return nil
}

func (m *Req_Arena_Round_) GetHeroRobot() []*Arena_Battle_MonsterInfo_ {
	if m != nil {
		return m.HeroRobot
	}
	return nil
}

func (m *Req_Arena_Round_) GetUserID() int64 {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return 0
}

func (m *Req_Arena_Round_) GetPower() int32 {
	if m != nil && m.Power != nil {
		return *m.Power
	}
	return 0
}

func (m *Req_Arena_Round_) GetVictory() int32 {
	if m != nil && m.Victory != nil {
		return *m.Victory
	}
	return 0
}

// 响应回合结束( 只有两边都结束， 或者倒计时结束才会下发 )
type Resp_Arena_Round_ struct {
	Victor           *int64                       `protobuf:"varint,1,opt,name=Victor" json:"Victor,omitempty"`
	HeroRed          []*Arena_Battle_MonsterInfo_ `protobuf:"bytes,2,rep,name=HeroRed" json:"HeroRed,omitempty"`
	HeroBlud         []*Arena_Battle_MonsterInfo_ `protobuf:"bytes,3,rep,name=HeroBlud" json:"HeroBlud,omitempty"`
	RandSed          *int64                       `protobuf:"varint,4,opt,name=RandSed" json:"RandSed,omitempty"`
	UserID           *int64                       `protobuf:"varint,5,opt,name=UserID" json:"UserID,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *Resp_Arena_Round_) Reset()                    { *m = Resp_Arena_Round_{} }
func (m *Resp_Arena_Round_) String() string            { return proto.CompactTextString(m) }
func (*Resp_Arena_Round_) ProtoMessage()               {}
func (*Resp_Arena_Round_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{23} }

func (m *Resp_Arena_Round_) GetVictor() int64 {
	if m != nil && m.Victor != nil {
		return *m.Victor
	}
	return 0
}

func (m *Resp_Arena_Round_) GetHeroRed() []*Arena_Battle_MonsterInfo_ {
	if m != nil {
		return m.HeroRed
	}
	return nil
}

func (m *Resp_Arena_Round_) GetHeroBlud() []*Arena_Battle_MonsterInfo_ {
	if m != nil {
		return m.HeroBlud
	}
	return nil
}

func (m *Resp_Arena_Round_) GetRandSed() int64 {
	if m != nil && m.RandSed != nil {
		return *m.RandSed
	}
	return 0
}

func (m *Resp_Arena_Round_) GetUserID() int64 {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return 0
}

// 转发 战斗消除 wjl 20200219 竞技场机器人怪物拖完消息
type Fw_Arena_Round_ struct {
	UserID           *int64             `protobuf:"varint,1,opt,name=UserID" json:"UserID,omitempty"`
	HeroInfos        []*BattleHeroInfo_ `protobuf:"bytes,2,rep,name=HeroInfos" json:"HeroInfos,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *Fw_Arena_Round_) Reset()                    { *m = Fw_Arena_Round_{} }
func (m *Fw_Arena_Round_) String() string            { return proto.CompactTextString(m) }
func (*Fw_Arena_Round_) ProtoMessage()               {}
func (*Fw_Arena_Round_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{24} }

func (m *Fw_Arena_Round_) GetUserID() int64 {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return 0
}

func (m *Fw_Arena_Round_) GetHeroInfos() []*BattleHeroInfo_ {
	if m != nil {
		return m.HeroInfos
	}
	return nil
}

// 请求 战斗结束（客户端表现结束）
type Req_Arena_Round_End_ struct {
	// 先由客户端计算战斗结果，并上报
	Ret              *int32 `protobuf:"varint,1,opt,name=Ret" json:"Ret,omitempty"`
	UserID           *int64 `protobuf:"varint,2,opt,name=UserID" json:"UserID,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Req_Arena_Round_End_) Reset()                    { *m = Req_Arena_Round_End_{} }
func (m *Req_Arena_Round_End_) String() string            { return proto.CompactTextString(m) }
func (*Req_Arena_Round_End_) ProtoMessage()               {}
func (*Req_Arena_Round_End_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{25} }

func (m *Req_Arena_Round_End_) GetRet() int32 {
	if m != nil && m.Ret != nil {
		return *m.Ret
	}
	return 0
}

func (m *Req_Arena_Round_End_) GetUserID() int64 {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return 0
}

// 响应 战斗结束（客户端表现结束）
type Resp_Arena_Round_End_ struct {
	Step             *int32 `protobuf:"varint,1,opt,name=Step" json:"Step,omitempty"`
	EndTime          *int64 `protobuf:"varint,2,opt,name=EndTime" json:"EndTime,omitempty"`
	UserID           *int64 `protobuf:"varint,3,opt,name=UserID" json:"UserID,omitempty"`
	RoundVictorUid   *int64 `protobuf:"varint,4,opt,name=RoundVictorUid" json:"RoundVictorUid,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Resp_Arena_Round_End_) Reset()                    { *m = Resp_Arena_Round_End_{} }
func (m *Resp_Arena_Round_End_) String() string            { return proto.CompactTextString(m) }
func (*Resp_Arena_Round_End_) ProtoMessage()               {}
func (*Resp_Arena_Round_End_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{26} }

func (m *Resp_Arena_Round_End_) GetStep() int32 {
	if m != nil && m.Step != nil {
		return *m.Step
	}
	return 0
}

func (m *Resp_Arena_Round_End_) GetEndTime() int64 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *Resp_Arena_Round_End_) GetUserID() int64 {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return 0
}

func (m *Resp_Arena_Round_End_) GetRoundVictorUid() int64 {
	if m != nil && m.RoundVictorUid != nil {
		return *m.RoundVictorUid
	}
	return 0
}

type Req_Arena_Exit_ struct {
	UserID           *int64 `protobuf:"varint,1,opt,name=UserID" json:"UserID,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Req_Arena_Exit_) Reset()                    { *m = Req_Arena_Exit_{} }
func (m *Req_Arena_Exit_) String() string            { return proto.CompactTextString(m) }
func (*Req_Arena_Exit_) ProtoMessage()               {}
func (*Req_Arena_Exit_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{27} }

func (m *Req_Arena_Exit_) GetUserID() int64 {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return 0
}

// 响应战斗结束
type Resp_Arena_End_ struct {
	WinUid           *int64       `protobuf:"varint,1,opt,name=WinUid" json:"WinUid,omitempty"`
	WinScore         *int32       `protobuf:"varint,2,opt,name=WinScore" json:"WinScore,omitempty"`
	WinGold          *int32       `protobuf:"varint,3,opt,name=WinGold" json:"WinGold,omitempty"`
	LostUid          *int64       `protobuf:"varint,4,opt,name=LostUid" json:"LostUid,omitempty"`
	Escape           *bool        `protobuf:"varint,5,opt,name=Escape" json:"Escape,omitempty"`
	LoseScore        *int32       `protobuf:"varint,6,opt,name=LoseScore" json:"LoseScore,omitempty"`
	LoseGold         *int32       `protobuf:"varint,7,opt,name=LoseGold" json:"LoseGold,omitempty"`
	UserID           *int64       `protobuf:"varint,8,opt,name=UserID" json:"UserID,omitempty"`
	ChestInfo        *Chest_Info_ `protobuf:"bytes,9,opt,name=ChestInfo" json:"ChestInfo,omitempty"`
	DescID           *int32       `protobuf:"varint,10,opt,name=DescID" json:"DescID,omitempty"`
	LoseStar         *int32       `protobuf:"varint,11,opt,name=LoseStar" json:"LoseStar,omitempty"`
	WinStar          *int32       `protobuf:"varint,12,opt,name=WinStar" json:"WinStar,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Resp_Arena_End_) Reset()                    { *m = Resp_Arena_End_{} }
func (m *Resp_Arena_End_) String() string            { return proto.CompactTextString(m) }
func (*Resp_Arena_End_) ProtoMessage()               {}
func (*Resp_Arena_End_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{28} }

func (m *Resp_Arena_End_) GetWinUid() int64 {
	if m != nil && m.WinUid != nil {
		return *m.WinUid
	}
	return 0
}

func (m *Resp_Arena_End_) GetWinScore() int32 {
	if m != nil && m.WinScore != nil {
		return *m.WinScore
	}
	return 0
}

func (m *Resp_Arena_End_) GetWinGold() int32 {
	if m != nil && m.WinGold != nil {
		return *m.WinGold
	}
	return 0
}

func (m *Resp_Arena_End_) GetLostUid() int64 {
	if m != nil && m.LostUid != nil {
		return *m.LostUid
	}
	return 0
}

func (m *Resp_Arena_End_) GetEscape() bool {
	if m != nil && m.Escape != nil {
		return *m.Escape
	}
	return false
}

func (m *Resp_Arena_End_) GetLoseScore() int32 {
	if m != nil && m.LoseScore != nil {
		return *m.LoseScore
	}
	return 0
}

func (m *Resp_Arena_End_) GetLoseGold() int32 {
	if m != nil && m.LoseGold != nil {
		return *m.LoseGold
	}
	return 0
}

func (m *Resp_Arena_End_) GetUserID() int64 {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return 0
}

func (m *Resp_Arena_End_) GetChestInfo() *Chest_Info_ {
	if m != nil {
		return m.ChestInfo
	}
	return nil
}

func (m *Resp_Arena_End_) GetDescID() int32 {
	if m != nil && m.DescID != nil {
		return *m.DescID
	}
	return 0
}

func (m *Resp_Arena_End_) GetLoseStar() int32 {
	if m != nil && m.LoseStar != nil {
		return *m.LoseStar
	}
	return 0
}

func (m *Resp_Arena_End_) GetWinStar() int32 {
	if m != nil && m.WinStar != nil {
		return *m.WinStar
	}
	return 0
}

// 回复 玩家 竞技场数据更新
type Resp_PlayerUpdate_Arena_ struct {
	Score            *int32 `protobuf:"varint,1,opt,name=Score" json:"Score,omitempty"`
	Honor            *int32 `protobuf:"varint,2,opt,name=Honor" json:"Honor,omitempty"`
	DailyHonor       *int32 `protobuf:"varint,3,opt,name=DailyHonor" json:"DailyHonor,omitempty"`
	UserID           *int64 `protobuf:"varint,4,opt,name=UserID" json:"UserID,omitempty"`
	Rank             *int32 `protobuf:"varint,5,opt,name=Rank" json:"Rank,omitempty"`
	GameNum          *int32 `protobuf:"varint,6,opt,name=GameNum" json:"GameNum,omitempty"`
	GameWin          *int32 `protobuf:"varint,7,opt,name=GameWin" json:"GameWin,omitempty"`
	Star             *int32 `protobuf:"varint,8,opt,name=Star" json:"Star,omitempty"`
	Vit              *int32 `protobuf:"varint,9,opt,name=Vit" json:"Vit,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Resp_PlayerUpdate_Arena_) Reset()                    { *m = Resp_PlayerUpdate_Arena_{} }
func (m *Resp_PlayerUpdate_Arena_) String() string            { return proto.CompactTextString(m) }
func (*Resp_PlayerUpdate_Arena_) ProtoMessage()               {}
func (*Resp_PlayerUpdate_Arena_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{29} }

func (m *Resp_PlayerUpdate_Arena_) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *Resp_PlayerUpdate_Arena_) GetHonor() int32 {
	if m != nil && m.Honor != nil {
		return *m.Honor
	}
	return 0
}

func (m *Resp_PlayerUpdate_Arena_) GetDailyHonor() int32 {
	if m != nil && m.DailyHonor != nil {
		return *m.DailyHonor
	}
	return 0
}

func (m *Resp_PlayerUpdate_Arena_) GetUserID() int64 {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return 0
}

func (m *Resp_PlayerUpdate_Arena_) GetRank() int32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *Resp_PlayerUpdate_Arena_) GetGameNum() int32 {
	if m != nil && m.GameNum != nil {
		return *m.GameNum
	}
	return 0
}

func (m *Resp_PlayerUpdate_Arena_) GetGameWin() int32 {
	if m != nil && m.GameWin != nil {
		return *m.GameWin
	}
	return 0
}

func (m *Resp_PlayerUpdate_Arena_) GetStar() int32 {
	if m != nil && m.Star != nil {
		return *m.Star
	}
	return 0
}

func (m *Resp_PlayerUpdate_Arena_) GetVit() int32 {
	if m != nil && m.Vit != nil {
		return *m.Vit
	}
	return 0
}

// 请求 竞技场断线重连
type Req_Arena_Reconn_ struct {
	UserID           *int64 `protobuf:"varint,1,opt,name=UserID" json:"UserID,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Req_Arena_Reconn_) Reset()                    { *m = Req_Arena_Reconn_{} }
func (m *Req_Arena_Reconn_) String() string            { return proto.CompactTextString(m) }
func (*Req_Arena_Reconn_) ProtoMessage()               {}
func (*Req_Arena_Reconn_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{30} }

func (m *Req_Arena_Reconn_) GetUserID() int64 {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return 0
}

// 响应 竞技场断线重连
type Resp_Arena_Reconn_ struct {
	UserID           *int64                       `protobuf:"varint,1,opt,name=UserID" json:"UserID,omitempty"`
	RoomID           *int32                       `protobuf:"varint,2,opt,name=RoomID" json:"RoomID,omitempty"`
	PlayerRed        *Arena_Player_Info           `protobuf:"bytes,3,opt,name=PlayerRed" json:"PlayerRed,omitempty"`
	PlayerBlue       *Arena_Player_Info           `protobuf:"bytes,4,opt,name=PlayerBlue" json:"PlayerBlue,omitempty"`
	Ret              []int32                      `protobuf:"varint,5,rep,name=Ret" json:"Ret,omitempty"`
	Step             *int32                       `protobuf:"varint,6,opt,name=Step" json:"Step,omitempty"`
	RemainStep       *int32                       `protobuf:"varint,7,opt,name=RemainStep" json:"RemainStep,omitempty"`
	EndTime          *int64                       `protobuf:"varint,8,opt,name=EndTime" json:"EndTime,omitempty"`
	Status           *int32                       `protobuf:"varint,9,opt,name=Status" json:"Status,omitempty"`
	Heroes           []*Arena_Battle_MonsterInfo_ `protobuf:"bytes,10,rep,name=Heroes" json:"Heroes,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *Resp_Arena_Reconn_) Reset()                    { *m = Resp_Arena_Reconn_{} }
func (m *Resp_Arena_Reconn_) String() string            { return proto.CompactTextString(m) }
func (*Resp_Arena_Reconn_) ProtoMessage()               {}
func (*Resp_Arena_Reconn_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{31} }

func (m *Resp_Arena_Reconn_) GetUserID() int64 {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return 0
}

func (m *Resp_Arena_Reconn_) GetRoomID() int32 {
	if m != nil && m.RoomID != nil {
		return *m.RoomID
	}
	return 0
}

func (m *Resp_Arena_Reconn_) GetPlayerRed() *Arena_Player_Info {
	if m != nil {
		return m.PlayerRed
	}
	return nil
}

func (m *Resp_Arena_Reconn_) GetPlayerBlue() *Arena_Player_Info {
	if m != nil {
		return m.PlayerBlue
	}
	return nil
}

func (m *Resp_Arena_Reconn_) GetRet() []int32 {
	if m != nil {
		return m.Ret
	}
	return nil
}

func (m *Resp_Arena_Reconn_) GetStep() int32 {
	if m != nil && m.Step != nil {
		return *m.Step
	}
	return 0
}

func (m *Resp_Arena_Reconn_) GetRemainStep() int32 {
	if m != nil && m.RemainStep != nil {
		return *m.RemainStep
	}
	return 0
}

func (m *Resp_Arena_Reconn_) GetEndTime() int64 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *Resp_Arena_Reconn_) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *Resp_Arena_Reconn_) GetHeroes() []*Arena_Battle_MonsterInfo_ {
	if m != nil {
		return m.Heroes
	}
	return nil
}

// 请求 竞技场断线后重新开始
type Req_Arena_Reconn_Start_ struct {
	UserID           *int64 `protobuf:"varint,1,opt,name=UserID" json:"UserID,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Req_Arena_Reconn_Start_) Reset()                    { *m = Req_Arena_Reconn_Start_{} }
func (m *Req_Arena_Reconn_Start_) String() string            { return proto.CompactTextString(m) }
func (*Req_Arena_Reconn_Start_) ProtoMessage()               {}
func (*Req_Arena_Reconn_Start_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{32} }

func (m *Req_Arena_Reconn_Start_) GetUserID() int64 {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return 0
}

// 请求 竞技场宝箱领取
type Req_Recv_Arena_Box_ struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *Req_Recv_Arena_Box_) Reset()                    { *m = Req_Recv_Arena_Box_{} }
func (m *Req_Recv_Arena_Box_) String() string            { return proto.CompactTextString(m) }
func (*Req_Recv_Arena_Box_) ProtoMessage()               {}
func (*Req_Recv_Arena_Box_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{33} }

// 响应 竞技场宝箱领取
type Resp_Recv_Arena_Box_ struct {
	// optional Chest_Info_ ChestInfo = 1;// 获胜方获得的宝箱
	ChestIcon        *int32          `protobuf:"varint,1,opt,name=ChestIcon" json:"ChestIcon,omitempty"`
	ChestRewards     []*Reward_Info_ `protobuf:"bytes,2,rep,name=ChestRewards" json:"ChestRewards,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Resp_Recv_Arena_Box_) Reset()                    { *m = Resp_Recv_Arena_Box_{} }
func (m *Resp_Recv_Arena_Box_) String() string            { return proto.CompactTextString(m) }
func (*Resp_Recv_Arena_Box_) ProtoMessage()               {}
func (*Resp_Recv_Arena_Box_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{34} }

func (m *Resp_Recv_Arena_Box_) GetChestIcon() int32 {
	if m != nil && m.ChestIcon != nil {
		return *m.ChestIcon
	}
	return 0
}

func (m *Resp_Recv_Arena_Box_) GetChestRewards() []*Reward_Info_ {
	if m != nil {
		return m.ChestRewards
	}
	return nil
}

type Resp_Arena_SeasonEnd_ struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *Resp_Arena_SeasonEnd_) Reset()                    { *m = Resp_Arena_SeasonEnd_{} }
func (m *Resp_Arena_SeasonEnd_) String() string            { return proto.CompactTextString(m) }
func (*Resp_Arena_SeasonEnd_) ProtoMessage()               {}
func (*Resp_Arena_SeasonEnd_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{35} }

type Resp_Arena_RoundEx_ struct {
	Uid              *int32                       `protobuf:"varint,1,opt,name=Uid" json:"Uid,omitempty"`
	EnemyUid         *int32                       `protobuf:"varint,2,opt,name=EnemyUid" json:"EnemyUid,omitempty"`
	EnemyHeros       []*Arena_Battle_MonsterInfo_ `protobuf:"bytes,3,rep,name=EnemyHeros" json:"EnemyHeros,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *Resp_Arena_RoundEx_) Reset()                    { *m = Resp_Arena_RoundEx_{} }
func (m *Resp_Arena_RoundEx_) String() string            { return proto.CompactTextString(m) }
func (*Resp_Arena_RoundEx_) ProtoMessage()               {}
func (*Resp_Arena_RoundEx_) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{36} }

func (m *Resp_Arena_RoundEx_) GetUid() int32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *Resp_Arena_RoundEx_) GetEnemyUid() int32 {
	if m != nil && m.EnemyUid != nil {
		return *m.EnemyUid
	}
	return 0
}

func (m *Resp_Arena_RoundEx_) GetEnemyHeros() []*Arena_Battle_MonsterInfo_ {
	if m != nil {
		return m.EnemyHeros
	}
	return nil
}

func init() {
	proto.RegisterType((*Arena_Rank_Info_)(nil), "protocol.Arena_Rank_Info_")
	proto.RegisterType((*Arena_Monster_Info_)(nil), "protocol.Arena_Monster_Info_")
	proto.RegisterType((*Arena_Battle_MonsterInfo_)(nil), "protocol.Arena_Battle_MonsterInfo_")
	proto.RegisterType((*Arena_Player_Info)(nil), "protocol.Arena_Player_Info")
	proto.RegisterType((*Req_Arena_Rank_)(nil), "protocol.Req_Arena_Rank_")
	proto.RegisterType((*Resp_Arena_Rank_)(nil), "protocol.Resp_Arena_Rank_")
	proto.RegisterType((*Req_Arena_OpenTime_)(nil), "protocol.Req_Arena_OpenTime_")
	proto.RegisterType((*Resp_Arena_OpenTime_)(nil), "protocol.Resp_Arena_OpenTime_")
	proto.RegisterType((*Req_Arena_Info_)(nil), "protocol.Req_Arena_Info_")
	proto.RegisterType((*Resp_Arena_Info_)(nil), "protocol.Resp_Arena_Info_")
	proto.RegisterType((*Req_Honor_Shop_)(nil), "protocol.Req_Honor_Shop_")
	proto.RegisterType((*Resp_Honor_Shop_)(nil), "protocol.Resp_Honor_Shop_")
	proto.RegisterType((*Req_Honor_Buy_)(nil), "protocol.Req_Honor_Buy_")
	proto.RegisterType((*Resp_Honor_Buy_)(nil), "protocol.Resp_Honor_Buy_")
	proto.RegisterType((*Arena_Reward_)(nil), "protocol.Arena_Reward_")
	proto.RegisterType((*Req_Arena_Match_)(nil), "protocol.Req_Arena_Match_")
	proto.RegisterType((*Resp_Arena_Match_)(nil), "protocol.Resp_Arena_Match_")
	proto.RegisterType((*Req_Arena_Start_)(nil), "protocol.Req_Arena_Start_")
	proto.RegisterType((*Resp_Arena_Start_)(nil), "protocol.Resp_Arena_Start_")
	proto.RegisterType((*Req_Arena_GenMonster_)(nil), "protocol.Req_Arena_GenMonster_")
	proto.RegisterType((*Resp_Arena_GenMonster_)(nil), "protocol.Resp_Arena_GenMonster_")
	proto.RegisterType((*Fw_Arena_GenMonster_)(nil), "protocol.Fw_Arena_GenMonster_")
	proto.RegisterType((*Req_Arena_Round_)(nil), "protocol.Req_Arena_Round_")
	proto.RegisterType((*Resp_Arena_Round_)(nil), "protocol.Resp_Arena_Round_")
	proto.RegisterType((*Fw_Arena_Round_)(nil), "protocol.Fw_Arena_Round_")
	proto.RegisterType((*Req_Arena_Round_End_)(nil), "protocol.Req_Arena_Round_End_")
	proto.RegisterType((*Resp_Arena_Round_End_)(nil), "protocol.Resp_Arena_Round_End_")
	proto.RegisterType((*Req_Arena_Exit_)(nil), "protocol.Req_Arena_Exit_")
	proto.RegisterType((*Resp_Arena_End_)(nil), "protocol.Resp_Arena_End_")
	proto.RegisterType((*Resp_PlayerUpdate_Arena_)(nil), "protocol.Resp_PlayerUpdate_Arena_")
	proto.RegisterType((*Req_Arena_Reconn_)(nil), "protocol.Req_Arena_Reconn_")
	proto.RegisterType((*Resp_Arena_Reconn_)(nil), "protocol.Resp_Arena_Reconn_")
	proto.RegisterType((*Req_Arena_Reconn_Start_)(nil), "protocol.Req_Arena_Reconn_Start_")
	proto.RegisterType((*Req_Recv_Arena_Box_)(nil), "protocol.Req_Recv_Arena_Box_")
	proto.RegisterType((*Resp_Recv_Arena_Box_)(nil), "protocol.Resp_Recv_Arena_Box_")
	proto.RegisterType((*Resp_Arena_SeasonEnd_)(nil), "protocol.Resp_Arena_SeasonEnd_")
	proto.RegisterType((*Resp_Arena_RoundEx_)(nil), "protocol.Resp_Arena_RoundEx_")
}

func init() { proto.RegisterFile("arena.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 1496 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x57, 0x4b, 0x73, 0x1b, 0x45,
	0x10, 0xae, 0xd5, 0x5b, 0x2d, 0x3b, 0xb6, 0xe5, 0xd7, 0x26, 0x14, 0x55, 0x61, 0x53, 0x54, 0x42,
	0x55, 0x30, 0x94, 0x13, 0xe0, 0xc0, 0x09, 0xc5, 0x4e, 0x62, 0xca, 0x71, 0x52, 0x92, 0x9d, 0x00,
	0x07, 0x54, 0x6b, 0x69, 0x12, 0x6f, 0x79, 0xb5, 0x23, 0x76, 0xd7, 0x89, 0x7d, 0xe1, 0xca, 0x81,
	0x33, 0x17, 0x8e, 0x5c, 0x38, 0x73, 0xe2, 0xbf, 0xf0, 0x0f, 0xf8, 0x05, 0x5c, 0xe9, 0xee, 0x99,
	0xd9, 0x9d, 0x95, 0xe4, 0x57, 0x51, 0x9c, 0xec, 0x69, 0xcd, 0xf4, 0xe3, 0xeb, 0xaf, 0x1f, 0x0b,
	0x2d, 0x3f, 0x16, 0x91, 0xbf, 0x31, 0x8e, 0x65, 0x2a, 0xdb, 0x0d, 0xfe, 0x33, 0x90, 0xe1, 0x2d,
	0x38, 0xf4, 0x13, 0xa1, 0xa4, 0xde, 0x4f, 0x0e, 0x2c, 0x7e, 0x45, 0xb7, 0xfa, 0x5d, 0x3f, 0x3a,
	0xee, 0xef, 0x44, 0xaf, 0x65, 0xbf, 0x7d, 0x03, 0x6a, 0x07, 0x89, 0x88, 0x77, 0xb6, 0x5c, 0xe7,
	0xb6, 0x73, 0xaf, 0x4c, 0x67, 0xfa, 0x75, 0x4f, 0xba, 0x25, 0x3c, 0x57, 0xdb, 0x73, 0x50, 0xd9,
	0xf3, 0x47, 0xc2, 0x2d, 0xe3, 0xa9, 0xd9, 0x9e, 0x87, 0x6a, 0x6f, 0x20, 0x63, 0xe1, 0x56, 0xf8,
	0xc7, 0x05, 0xa8, 0x3f, 0x92, 0x27, 0x51, 0x1a, 0x9f, 0xb9, 0x55, 0x16, 0xb4, 0x01, 0x9e, 0xf9,
	0xa7, 0x8f, 0x8e, 0xfc, 0x71, 0x2a, 0x62, 0xb7, 0xc6, 0xb2, 0x25, 0x68, 0x3e, 0x96, 0xf1, 0xc8,
	0x4f, 0x03, 0x19, 0xb9, 0xf5, 0xdb, 0xe5, 0x7b, 0x55, 0xef, 0x6b, 0x58, 0x56, 0x8e, 0x3c, 0x93,
	0x51, 0x82, 0x37, 0xb5, 0x2f, 0x8b, 0xd0, 0x78, 0xec, 0x8f, 0x82, 0xf0, 0x4c, 0x7b, 0xc3, 0x06,
	0x7a, 0xc7, 0x41, 0x18, 0xee, 0xbe, 0x45, 0x77, 0xf0, 0x25, 0x5d, 0xd9, 0xf7, 0x43, 0x11, 0xa5,
	0x28, 0x29, 0xb3, 0xae, 0x1f, 0xe1, 0xa6, 0xd2, 0xd5, 0xf1, 0xd3, 0x34, 0x14, 0x46, 0xa5, 0xd2,
	0x08, 0x50, 0xca, 0x74, 0xe1, 0xff, 0xac, 0x46, 0xff, 0xff, 0x74, 0xcc, 0x31, 0x71, 0x84, 0x2f,
	0x64, 0xf2, 0x8d, 0x0e, 0x49, 0x9d, 0xbe, 0xd5, 0xf1, 0x58, 0xf6, 0x6b, 0x53, 0xf6, 0x55, 0x2c,
	0xbf, 0x94, 0x60, 0x49, 0x39, 0xf0, 0x22, 0xf4, 0xcf, 0x74, 0x2c, 0xed, 0x16, 0x94, 0x0f, 0x82,
	0xa1, 0xc6, 0xd4, 0x60, 0x58, 0x2a, 0x62, 0xa8, 0xcc, 0xe3, 0xcd, 0xad, 0xe0, 0xad, 0xb6, 0xee,
	0x41, 0xa5, 0x2b, 0x43, 0xc1, 0xd6, 0x5b, 0x9b, 0x2b, 0x1b, 0x26, 0x8f, 0x1b, 0x24, 0xd5, 0x28,
	0x7d, 0x6a, 0xe3, 0x49, 0x5e, 0xb5, 0x36, 0xdf, 0xcf, 0x2f, 0xce, 0xc2, 0xd5, 0x4a, 0x53, 0x9d,
	0xcd, 0x60, 0x92, 0x7b, 0x69, 0x2c, 0xfc, 0x63, 0xb7, 0x61, 0xce, 0x3b, 0x03, 0x19, 0x21, 0x54,
	0x4d, 0x13, 0x36, 0x9d, 0x0f, 0xe2, 0xd0, 0x05, 0xf6, 0x19, 0x23, 0x78, 0x22, 0xc3, 0xa1, 0xdb,
	0x9a, 0x91, 0xe5, 0x39, 0xf3, 0xa4, 0x2b, 0xde, 0xec, 0x07, 0x18, 0xe6, 0x3c, 0x05, 0xed, 0x1d,
	0xc0, 0x42, 0x57, 0xfc, 0xd0, 0xb7, 0x08, 0x37, 0xc5, 0x35, 0x64, 0x46, 0x47, 0xbc, 0x09, 0x22,
	0xfa, 0x35, 0xa7, 0xdb, 0xfe, 0xd9, 0xd8, 0x60, 0x43, 0xd4, 0x89, 0x03, 0x11, 0x0d, 0x77, 0xb6,
	0x12, 0x44, 0xa8, 0x8c, 0x6a, 0xbf, 0x83, 0xc5, 0xae, 0x48, 0xc6, 0x17, 0xea, 0xbd, 0x87, 0x28,
	0x2a, 0x95, 0x04, 0xce, 0xad, 0x49, 0x70, 0x2c, 0xf6, 0x17, 0xcc, 0x79, 0xab, 0xb0, 0x9c, 0xbb,
	0xfc, 0x7c, 0x2c, 0x22, 0x0a, 0xa7, 0xef, 0x7d, 0x09, 0x2b, 0x96, 0xc9, 0x4c, 0x4e, 0x5c, 0x30,
	0x87, 0x3c, 0xa0, 0x47, 0xa1, 0x4c, 0x04, 0x8b, 0x4a, 0x0c, 0xc3, 0x07, 0x36, 0x0c, 0x33, 0x4b,
	0xce, 0xfb, 0xbb, 0x5c, 0x88, 0x49, 0x5d, 0x42, 0x8c, 0xf9, 0xa8, 0xa8, 0x92, 0x55, 0xc3, 0x76,
	0x34, 0xcc, 0x95, 0xb7, 0x3f, 0x86, 0x39, 0xbe, 0xd4, 0x15, 0xef, 0xfc, 0x78, 0x98, 0x70, 0x45,
	0xb4, 0x36, 0xd7, 0xa7, 0x02, 0xe6, 0x9f, 0x6d, 0xc3, 0x15, 0x7e, 0x8e, 0x01, 0xf4, 0x84, 0x9f,
	0x70, 0xe2, 0xab, 0x06, 0x7e, 0x46, 0xae, 0x66, 0xec, 0x3d, 0x41, 0xde, 0xee, 0x9d, 0x8c, 0x34,
	0x6f, 0xb4, 0xe0, 0x55, 0x10, 0x69, 0xe2, 0x50, 0xc0, 0x47, 0x22, 0x49, 0x89, 0x2d, 0x9a, 0x3b,
	0xf7, 0x61, 0x8e, 0x45, 0xc6, 0x27, 0x60, 0x9f, 0xd6, 0x2c, 0x2a, 0x2b, 0x6f, 0x54, 0x98, 0x77,
	0x89, 0x36, 0xea, 0x62, 0xeb, 0xc2, 0x8b, 0x36, 0xd8, 0x73, 0xd3, 0x60, 0x33, 0xe7, 0xa8, 0xb4,
	0x9e, 0xca, 0x48, 0xc6, 0xee, 0x0d, 0xc3, 0xd3, 0x2d, 0x1f, 0xdb, 0x89, 0x92, 0x2d, 0xb0, 0x6c,
	0x15, 0xe6, 0x73, 0x19, 0xb2, 0xd8, 0x5d, 0x64, 0xf1, 0x3a, 0x2c, 0xec, 0x89, 0x53, 0x74, 0xfa,
	0x75, 0x2c, 0x92, 0x23, 0x56, 0xb9, 0xc4, 0x2a, 0x31, 0xe4, 0x8e, 0x3c, 0xe5, 0xf8, 0xda, 0x06,
	0x03, 0x7c, 0xd6, 0x4b, 0xfd, 0xd8, 0x5d, 0x36, 0x98, 0xf1, 0x69, 0x85, 0x4f, 0xe4, 0x67, 0x38,
	0x54, 0x59, 0x5b, 0x35, 0x05, 0xfe, 0x32, 0x48, 0xdd, 0x35, 0xa6, 0xd8, 0x43, 0x45, 0x07, 0xb6,
	0xde, 0xef, 0x1d, 0xc9, 0xf1, 0xcc, 0xaa, 0xd8, 0xf5, 0x93, 0x54, 0xa9, 0xe0, 0xaa, 0xf0, 0x7e,
	0x73, 0x34, 0x43, 0x2e, 0x7a, 0xf7, 0x21, 0x54, 0x77, 0x52, 0x31, 0x4a, 0x34, 0xed, 0xcf, 0x03,
	0x12, 0x31, 0x7a, 0x11, 0x07, 0x03, 0xa1, 0xda, 0x27, 0xf9, 0xdb, 0x39, 0x39, 0xa3, 0x80, 0x55,
	0x85, 0x55, 0xe9, 0xc2, 0x6e, 0x30, 0x42, 0x8f, 0xab, 0x7c, 0xa4, 0xde, 0x80, 0x6a, 0xd1, 0x8c,
	0xea, 0x80, 0x33, 0x90, 0xaa, 0x33, 0x8d, 0x3b, 0x70, 0x23, 0x0f, 0x0d, 0x75, 0xf6, 0xad, 0xa7,
	0x8e, 0xc1, 0x86, 0xce, 0x5c, 0x71, 0x25, 0xd3, 0x78, 0x3a, 0x38, 0xa0, 0xf0, 0x86, 0xaa, 0xc0,
	0x63, 0x82, 0x27, 0x8b, 0x93, 0x95, 0x58, 0x0c, 0x71, 0x2e, 0x63, 0x48, 0x16, 0x49, 0xa6, 0x5d,
	0xdb, 0x57, 0xed, 0x24, 0xa3, 0x07, 0x37, 0x5b, 0xef, 0x67, 0x07, 0xe6, 0x8b, 0x05, 0x92, 0xb5,
	0xe6, 0xac, 0xde, 0xb0, 0x35, 0x67, 0xad, 0x5b, 0x0b, 0x06, 0x4c, 0x06, 0x35, 0x0f, 0x2d, 0xe7,
	0x2a, 0x17, 0x3a, 0x47, 0x83, 0x44, 0xbc, 0x19, 0xe1, 0xe0, 0xb0, 0x26, 0x0b, 0xb2, 0x86, 0x6a,
	0x8b, 0x8b, 0xcd, 0x1b, 0x50, 0x8a, 0x4d, 0xa3, 0x78, 0xe6, 0xa7, 0x83, 0x23, 0x06, 0xf0, 0xf9,
	0x98, 0xe1, 0x72, 0x4c, 0x40, 0x3a, 0xe5, 0xaa, 0xfe, 0x3f, 0x01, 0x50, 0x43, 0x87, 0x8c, 0xb0,
	0x4b, 0xad, 0xcd, 0xf7, 0x26, 0xab, 0xdf, 0x1a, 0x4b, 0xde, 0x9f, 0x0e, 0x2c, 0x59, 0xad, 0x26,
	0x37, 0xd3, 0x95, 0xb2, 0x90, 0xa7, 0x2e, 0xce, 0x8b, 0x21, 0x39, 0xa7, 0x02, 0xdf, 0x80, 0xa6,
	0x52, 0xd3, 0x15, 0xc3, 0x2b, 0xd8, 0xc9, 0x1d, 0xeb, 0x84, 0x27, 0x43, 0x86, 0xfb, 0x92, 0x07,
	0x08, 0xc7, 0x53, 0x11, 0x4b, 0xea, 0xf3, 0x19, 0xed, 0x74, 0xa8, 0x35, 0x66, 0x97, 0x67, 0xc3,
	0x43, 0xc8, 0xa5, 0xd3, 0x8d, 0xf4, 0xb8, 0x10, 0x9c, 0xbe, 0xc4, 0xe5, 0x29, 0xc6, 0xe7, 0xb5,
	0xd0, 0xbb, 0xd0, 0xdc, 0xf7, 0x0f, 0x43, 0x61, 0x21, 0x68, 0x8d, 0xdd, 0xec, 0xa7, 0xa9, 0xe6,
	0xe9, 0x8d, 0x60, 0x35, 0x77, 0xe8, 0x89, 0x88, 0xcc, 0xc8, 0x9d, 0xaa, 0x4b, 0xe3, 0x80, 0x42,
	0xf2, 0x73, 0x68, 0x72, 0xa0, 0xa8, 0xd3, 0xf4, 0xeb, 0x3b, 0x93, 0xc0, 0xcc, 0xd8, 0x64, 0xbc,
	0x08, 0xd6, 0xac, 0xd8, 0xfe, 0x7f, 0x7b, 0x87, 0xb0, 0xf2, 0xf8, 0xdd, 0xb5, 0xad, 0xdd, 0x9f,
	0xb6, 0x76, 0x33, 0xb7, 0xa6, 0xec, 0x98, 0x0b, 0x7d, 0xef, 0x2f, 0xc7, 0x4e, 0x2a, 0x53, 0xae,
	0x5f, 0x4c, 0x88, 0x73, 0x41, 0x42, 0x3e, 0x83, 0x06, 0xa9, 0xea, 0x89, 0xf0, 0xb5, 0x6e, 0x79,
	0x57, 0x09, 0xcc, 0x00, 0xd2, 0x95, 0x87, 0x32, 0xbd, 0x06, 0x20, 0x53, 0xc3, 0x93, 0xfa, 0xa8,
	0x7c, 0x87, 0xfb, 0x4f, 0x56, 0xcf, 0x2f, 0x83, 0x41, 0x2a, 0x71, 0xc7, 0x52, 0xf5, 0xfc, 0x47,
	0xb1, 0xd4, 0x74, 0x74, 0xa8, 0x45, 0x5d, 0xd3, 0xf0, 0x3d, 0x54, 0xbc, 0xa7, 0xb2, 0xba, 0x46,
	0x0c, 0x3a, 0x74, 0x2e, 0xae, 0x6b, 0x84, 0x40, 0x3b, 0x9a, 0x1f, 0x0d, 0x7b, 0x62, 0xa8, 0x63,
	0xc8, 0x63, 0xaa, 0x32, 0xa7, 0x9f, 0xc3, 0x42, 0x96, 0xf4, 0xdc, 0xe1, 0x42, 0xbe, 0x0b, 0x19,
	0x2e, 0x5d, 0x96, 0xe1, 0x07, 0xb4, 0x3a, 0x15, 0x13, 0xbc, 0x4d, 0x5a, 0x71, 0x26, 0x76, 0x45,
	0x3a, 0xbb, 0xab, 0x79, 0xdf, 0x53, 0x65, 0x4d, 0x00, 0xc7, 0xaf, 0x2e, 0x29, 0xe5, 0x5c, 0x4f,
	0x99, 0xcf, 0x6b, 0x38, 0x90, 0xe8, 0xb1, 0x02, 0x9c, 0xd6, 0xf1, 0xca, 0xf4, 0x4a, 0xb6, 0x7d,
	0x1a, 0xcc, 0xe8, 0x24, 0xff, 0x38, 0x7a, 0x10, 0xe9, 0x4b, 0x1a, 0x09, 0x5c, 0x7c, 0xf2, 0xad,
	0x1e, 0xbb, 0x24, 0x9e, 0xad, 0x31, 0x4d, 0x1e, 0xa1, 0x84, 0x17, 0xe5, 0xb2, 0x11, 0xec, 0xca,
	0x24, 0xcd, 0x4c, 0x93, 0x8e, 0xed, 0x64, 0xe0, 0x8f, 0xd5, 0x86, 0xdf, 0xe0, 0x59, 0x8f, 0x2b,
	0x8c, 0x52, 0x52, 0x33, 0xcd, 0x97, 0x44, 0xac, 0xa5, 0x3e, 0x81, 0x4f, 0x43, 0xaf, 0xb7, 0x7a,
	0xe9, 0xa2, 0x0a, 0x69, 0x72, 0x85, 0xac, 0xe6, 0x29, 0xe0, 0x9f, 0xf2, 0x4d, 0x73, 0x4b, 0x24,
	0x03, 0x7c, 0x09, 0xb6, 0x6e, 0x5e, 0x57, 0x5a, 0x96, 0xcb, 0x2c, 0xe0, 0x3d, 0xde, 0xfb, 0xdd,
	0x01, 0x97, 0x23, 0x57, 0xdd, 0xf9, 0x60, 0x3c, 0xf4, 0x53, 0xa1, 0x61, 0x98, 0x9c, 0x8f, 0xd9,
	0x3c, 0x2d, 0xcd, 0x58, 0xb7, 0xca, 0x13, 0xbe, 0x57, 0x4c, 0xbb, 0xe0, 0x05, 0xb3, 0x3a, 0xb9,
	0x60, 0xd6, 0x26, 0x17, 0xcc, 0x7a, 0x61, 0xb9, 0x6a, 0xd8, 0xab, 0x14, 0x2f, 0x9a, 0xde, 0x1d,
	0xaa, 0xaf, 0x8c, 0x5b, 0x02, 0x87, 0x72, 0x34, 0x9d, 0xc8, 0x5f, 0x4b, 0xd0, 0xb6, 0xc9, 0x34,
	0xfb, 0x9a, 0x35, 0x01, 0xff, 0xfb, 0xbc, 0x13, 0x57, 0x99, 0x77, 0xba, 0x00, 0xd4, 0xac, 0x33,
	0xbc, 0xae, 0x19, 0x18, 0xbb, 0x62, 0xe4, 0x53, 0x56, 0x50, 0x56, 0x9f, 0xe4, 0x7a, 0xc3, 0x38,
	0x8c, 0xb8, 0xa4, 0x27, 0x89, 0xde, 0xba, 0x1f, 0x40, 0x8d, 0xaa, 0x4e, 0x98, 0x7d, 0xfb, 0x4a,
	0x3d, 0xfe, 0x23, 0x58, 0x9f, 0x42, 0xf0, 0x9c, 0xd1, 0xaa, 0x3f, 0x8d, 0xf0, 0xd2, 0x5b, 0x7d,
	0x1f, 0xb7, 0xe2, 0xbe, 0xf7, 0x4a, 0x7f, 0x1a, 0x4d, 0xc8, 0x8b, 0xdf, 0x05, 0xce, 0xcc, 0xef,
	0x82, 0x0b, 0xb7, 0x54, 0x6f, 0xbd, 0xd0, 0x03, 0xd4, 0x57, 0x0a, 0x55, 0x21, 0x8e, 0xdd, 0xe5,
	0xc9, 0xe6, 0xb0, 0x7d, 0xda, 0xb7, 0xbf, 0xb7, 0x99, 0xe6, 0xdb, 0x91, 0x18, 0x9d, 0x91, 0x44,
	0xe5, 0xf3, 0x0b, 0x00, 0x96, 0x10, 0x46, 0xd7, 0x19, 0x83, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff,
	0x2b, 0x1f, 0xd4, 0xd0, 0x57, 0x11, 0x00, 0x00,
}
